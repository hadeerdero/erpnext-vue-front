{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// store/modules/app.js\nimport { axiosAuth } from '\"@/plugins/axios/axiosAuth';\nconst state = {\n  sidebarData: null,\n  loading: false,\n  error: null\n};\nconst getters = {\n  sidebarData: state => state.sidebarData,\n  sidebarLoading: state => state.loading,\n  sidebarError: state => state.error,\n  formattedSidebar: state => {\n    if (!state.sidebarData) return null;\n    return {\n      modules: state.sidebarData.allowed_modules || [],\n      shortcuts: state.sidebarData.shortcuts || [],\n      sections: state.sidebarData.sections || []\n    };\n  }\n};\nconst mutations = {\n  SET_SIDEBAR_LOADING(state, status) {\n    state.loading = status;\n  },\n  SET_SIDEBAR_DATA(state, data) {\n    state.sidebarData = {\n      // Original ERPNext data\n      ...data,\n      // Transformed data for easier consumption\n      allowed_modules: data.allowed_modules.map(module => ({\n        label: module.module_name,\n        icon: module.icon || 'fa fa-folder',\n        route: `/${module.module_name.toLowerCase()}`,\n        color: module.color || '#7F8C8D'\n      })),\n      sections: (data.sections || []).map(section => ({\n        label: section.label,\n        items: (section.items || []).map(item => ({\n          label: item.label,\n          route: item.route || '#',\n          icon: item.icon || 'fa fa-circle',\n          count: item.count || 0,\n          type: item.type || 'link'\n        }))\n      }))\n    };\n    state.error = null;\n  },\n  SET_SIDEBAR_ERROR(state, error) {\n    state.error = error;\n    state.sidebarData = null;\n  },\n  UPDATE_SIDEBAR_ITEM_COUNT(state, {\n    label,\n    count\n  }) {\n    if (!state.sidebarData) return;\n\n    // Update count in all sections\n    state.sidebarData.sections.forEach(section => {\n      section.items.forEach(item => {\n        if (item.label === label) {\n          item.count = count;\n        }\n      });\n    });\n  }\n};\nconst actions = {\n  async fetchSidebarData({\n    commit,\n    state\n  }) {\n    // Return cached data if available\n    if (state.sidebarData && !state.error) {\n      return state.sidebarData;\n    }\n    commit('SET_SIDEBAR_LOADING', true);\n    try {\n      const response = await axiosAuth.get('/api/method/frappe.desk.desktop.get_desktop_sidebar');\n      commit('SET_SIDEBAR_DATA', response.data.message);\n      return response.data.message;\n    } catch (error) {\n      console.error('Error fetching sidebar data:', error);\n      commit('SET_SIDEBAR_ERROR', error.message);\n      throw error;\n    } finally {\n      commit('SET_SIDEBAR_LOADING', false);\n    }\n  },\n  async refreshSidebarCounts({\n    commit,\n    state\n  }) {\n    if (!state.sidebarData) return;\n    try {\n      // Example: Fetch updated counts for specific items\n      const countsResponse = await axiosAuth.get('/api/method/frappe.desk.desktop.get_sidebar_counts');\n\n      // Update counts in the store\n      Object.entries(countsResponse.data.message).forEach(([label, count]) => {\n        commit('UPDATE_SIDEBAR_ITEM_COUNT', {\n          label,\n          count\n        });\n      });\n    } catch (error) {\n      console.error('Error refreshing sidebar counts:', error);\n    }\n  },\n  async initializeSidebar({\n    dispatch\n  }) {\n    // Fetch initial data\n    await dispatch('fetchSidebarData');\n\n    // Set up periodic refresh (every 5 minutes)\n    setInterval(() => {\n      dispatch('refreshSidebarCounts');\n    }, 300000);\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axiosAuth","state","sidebarData","loading","error","getters","sidebarLoading","sidebarError","formattedSidebar","modules","allowed_modules","shortcuts","sections","mutations","SET_SIDEBAR_LOADING","status","SET_SIDEBAR_DATA","data","map","module","label","module_name","icon","route","toLowerCase","color","section","items","item","count","type","SET_SIDEBAR_ERROR","UPDATE_SIDEBAR_ITEM_COUNT","forEach","actions","fetchSidebarData","commit","response","get","message","console","refreshSidebarCounts","countsResponse","Object","entries","initializeSidebar","dispatch","setInterval","namespaced"],"sources":["D:/hadeerwork/erpnext-vue-front/src/store/modules/app/app.js"],"sourcesContent":["// store/modules/app.js\r\nimport {axiosAuth} from '\"@/plugins/axios/axiosAuth';\r\n\r\nconst state = {\r\n  sidebarData: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst getters = {\r\n  sidebarData: (state) => state.sidebarData,\r\n  sidebarLoading: (state) => state.loading,\r\n  sidebarError: (state) => state.error,\r\n  formattedSidebar: (state) => {\r\n    if (!state.sidebarData) return null;\r\n    \r\n    return {\r\n      modules: state.sidebarData.allowed_modules || [],\r\n      shortcuts: state.sidebarData.shortcuts || [],\r\n      sections: state.sidebarData.sections || []\r\n    };\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  SET_SIDEBAR_LOADING(state, status) {\r\n    state.loading = status;\r\n  },\r\n  SET_SIDEBAR_DATA(state, data) {\r\n    state.sidebarData = {\r\n      // Original ERPNext data\r\n      ...data,\r\n      \r\n      // Transformed data for easier consumption\r\n      allowed_modules: data.allowed_modules.map(module => ({\r\n        label: module.module_name,\r\n        icon: module.icon || 'fa fa-folder',\r\n        route: `/${module.module_name.toLowerCase()}`,\r\n        color: module.color || '#7F8C8D'\r\n      })),\r\n      \r\n      sections: (data.sections || []).map(section => ({\r\n        label: section.label,\r\n        items: (section.items || []).map(item => ({\r\n          label: item.label,\r\n          route: item.route || '#',\r\n          icon: item.icon || 'fa fa-circle',\r\n          count: item.count || 0,\r\n          type: item.type || 'link'\r\n        }))\r\n      }))\r\n    };\r\n    state.error = null;\r\n  },\r\n  SET_SIDEBAR_ERROR(state, error) {\r\n    state.error = error;\r\n    state.sidebarData = null;\r\n  },\r\n  UPDATE_SIDEBAR_ITEM_COUNT(state, { label, count }) {\r\n    if (!state.sidebarData) return;\r\n    \r\n    // Update count in all sections\r\n    state.sidebarData.sections.forEach(section => {\r\n      section.items.forEach(item => {\r\n        if (item.label === label) {\r\n          item.count = count;\r\n        }\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  async fetchSidebarData({ commit, state }) {\r\n    // Return cached data if available\r\n    if (state.sidebarData && !state.error) {\r\n      return state.sidebarData;\r\n    }\r\n    \r\n    commit('SET_SIDEBAR_LOADING', true);\r\n    \r\n    try {\r\n      const response = await axiosAuth.get('/api/method/frappe.desk.desktop.get_desktop_sidebar');\r\n      commit('SET_SIDEBAR_DATA', response.data.message);\r\n      return response.data.message;\r\n    } catch (error) {\r\n      console.error('Error fetching sidebar data:', error);\r\n      commit('SET_SIDEBAR_ERROR', error.message);\r\n      throw error;\r\n    } finally {\r\n      commit('SET_SIDEBAR_LOADING', false);\r\n    }\r\n  },\r\n  \r\n  async refreshSidebarCounts({ commit, state }) {\r\n    if (!state.sidebarData) return;\r\n    \r\n    try {\r\n      // Example: Fetch updated counts for specific items\r\n      const countsResponse = await axiosAuth.get('/api/method/frappe.desk.desktop.get_sidebar_counts');\r\n      \r\n      // Update counts in the store\r\n      Object.entries(countsResponse.data.message).forEach(([label, count]) => {\r\n        commit('UPDATE_SIDEBAR_ITEM_COUNT', { label, count });\r\n      });\r\n    } catch (error) {\r\n      console.error('Error refreshing sidebar counts:', error);\r\n    }\r\n  },\r\n  \r\n  async initializeSidebar({ dispatch }) {\r\n    // Fetch initial data\r\n    await dispatch('fetchSidebarData');\r\n    \r\n    // Set up periodic refresh (every 5 minutes)\r\n    setInterval(() => {\r\n      dispatch('refreshSidebarCounts');\r\n    }, 300000);\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}