{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { format } from \"date-fns\";\nimport { axiosBusiness } from \"@/plugins/axios/axiosBusiness\";\nexport default {\n  name: \"DonationRequestsManagementView\",\n  data() {\n    return {\n      requests: [],\n      isLoading: false,\n      error: null,\n      statusFilter: \"\",\n      bloodTypeFilter: \"\",\n      currentPage: 1,\n      itemsPerPage: 10,\n      showTestModal: false,\n      testResult: null,\n      expirationDate: null,\n      showDonationModal: false,\n      donationData: {\n        blood_type: '',\n        donation_date: format(new Date(), 'yyyy-MM-dd'),\n        quantity: 450,\n        note: ''\n      },\n      selectedRequest: null,\n      selectedDonationRequest: null,\n      bloodTypes: [{\n        id: 1,\n        value: \"A+\",\n        label: \"A+\"\n      }, {\n        id: 2,\n        value: \"A-\",\n        label: \"A-\"\n      }, {\n        id: 3,\n        value: \"B+\",\n        label: \"B+\"\n      }, {\n        id: 4,\n        value: \"B-\",\n        label: \"B-\"\n      }, {\n        id: 5,\n        value: \"AB+\",\n        label: \"AB+\"\n      }, {\n        id: 6,\n        value: \"AB-\",\n        label: \"AB-\"\n      }, {\n        id: 7,\n        value: \"O+\",\n        label: \"O+\"\n      }, {\n        id: 8,\n        value: \"O-\",\n        label: \"O-\"\n      }]\n    };\n  },\n  computed: {\n    filteredRequests() {\n      let filtered = this.requests;\n      if (this.statusFilter) {\n        filtered = filtered.filter(r => r.status === this.statusFilter);\n      }\n      if (this.bloodTypeFilter) {\n        filtered = filtered.filter(r => r.blood_type === this.bloodTypeFilter);\n      }\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return filtered.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredRequests.length / this.itemsPerPage);\n    },\n    minExpirationDate() {\n      return format(new Date(), \"yyyy-MM-dd\");\n    }\n  },\n  created() {\n    this.fetchRequests();\n  },\n  methods: {\n    async fetchRequests() {\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axiosBusiness.get(\"donors/\");\n        this.requests = response.data;\n      } catch (err) {\n        console.error(\"Failed to fetch requests:\", err);\n        this.error = err.response?.data?.message || \"Failed to load donation requests. Please try again later.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    formatDate(dateString) {\n      return format(new Date(dateString), \"MMM dd, yyyy\");\n    },\n    getStatusLabel(status) {\n      switch (status) {\n        case \"1\":\n          return \"New\";\n        case \"2\":\n          return \"Tested\";\n        case \"3\":\n          return \"Completed\";\n        case \"4\":\n          return \"Rejected\";\n        default:\n          return \"Unknown\";\n      }\n    },\n    getStatusColor(status) {\n      switch (status) {\n        case \"1\":\n          return \"info\";\n        case \"2\":\n          return \"warning\";\n        case \"3\":\n          return \"success\";\n        case \"4\":\n          return \"danger\";\n        default:\n          return \"secondary\";\n      }\n    },\n    getBloodTypeColor(type) {\n      if (!type) return \"secondary\";\n      return type.includes(\"+\") ? \"danger\" : \"primary\";\n    },\n    resetFilters() {\n      this.statusFilter = \"\";\n      this.bloodTypeFilter = \"\";\n      this.currentPage = 1;\n    },\n    openTestModal(request) {\n      this.selectedRequest = request;\n      this.testResult = null;\n      this.expirationDate = null;\n      this.showTestModal = true;\n    },\n    closeTestModal() {\n      this.showTestModal = false;\n      this.selectedRequest = null;\n    },\n    async submitTestResult() {\n      try {\n        await axiosBusiness.patch(`donors/donation-requests/${this.selectedRequest.id}`, {\n          virus_test_result: this.testResult,\n          expiration_date: this.expirationDate,\n          status: \"2\" // Mark as tested\n        });\n        this.fetchRequests();\n        this.closeTestModal();\n      } catch (err) {\n        console.error(\"Failed to submit test result:\", err);\n        alert(err.response?.data?.message || \"Failed to update test result\");\n      }\n    },\n    openDonationModal(request) {\n      this.selectedDonationRequest = request;\n      this.donationData = {\n        blood_type: request.blood_type || '',\n        donation_date: format(new Date(), 'yyyy-MM-dd'),\n        quantity: request.quantity || 450,\n        note: request.note || ''\n      };\n      this.showDonationModal = true;\n    },\n    closeDonationModal() {\n      this.showDonationModal = false;\n      this.selectedDonationRequest = null;\n    },\n    async submitDonation() {\n      try {\n        if (!this.donationData.blood_type || !this.donationData.donation_date || !this.donationData.quantity) {\n          alert('Please fill all required fields');\n          return;\n        }\n        const quantity = parseFloat(this.donationData.quantity);\n        if (isNaN(quantity)) {\n          alert('Please enter a valid quantity');\n          return;\n        }\n        await axiosBusiness.patch(`donors/donation-requests/${this.selectedDonationRequest.id}/complete/`, {\n          blood_type: this.donationData.blood_type,\n          donation_date: this.donationData.donation_date,\n          quantity: quantity,\n          note: this.donationData.note,\n          status: \"3\" // Mark as completed\n        });\n        this.fetchRequests();\n        this.closeDonationModal();\n        alert('Donation completed successfully!');\n      } catch (err) {\n        console.error('Failed to complete donation:', err);\n        alert(err.response?.data?.message || 'Failed to complete donation');\n      }\n    },\n    async rejectRequest(request) {\n      if (!confirm(`Reject ${request.donor.user.first_name}'s donation request?`)) return;\n      try {\n        await axiosBusiness.patch(`/api/donation-requests/${request.id}/`, {\n          status: \"4\"\n        });\n        this.fetchRequests();\n      } catch (err) {\n        console.error(\"Failed to reject request:\", err);\n        alert(err.response?.data?.message || \"Failed to reject request\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["format","axiosBusiness","name","data","requests","isLoading","error","statusFilter","bloodTypeFilter","currentPage","itemsPerPage","showTestModal","testResult","expirationDate","showDonationModal","donationData","blood_type","donation_date","Date","quantity","note","selectedRequest","selectedDonationRequest","bloodTypes","id","value","label","computed","filteredRequests","filtered","filter","r","status","start","end","slice","totalPages","Math","ceil","length","minExpirationDate","created","fetchRequests","methods","response","get","err","console","message","formatDate","dateString","getStatusLabel","getStatusColor","getBloodTypeColor","type","includes","resetFilters","openTestModal","request","closeTestModal","submitTestResult","patch","virus_test_result","expiration_date","alert","openDonationModal","closeDonationModal","submitDonation","parseFloat","isNaN","rejectRequest","confirm","donor","user","first_name"],"sources":["C:\\Users\\CITCPC3\\Desktop\\hadeer\\erpnext-vue-front\\src\\views\\stock\\DonationRequestsManagementView.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"donation-requests-container\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header bg-white border-bottom-0\">\r\n        <h4 class=\"mb-0\">Donation Requests Management</h4>\r\n        <p class=\"text-muted mb-0\">Review and process donor requests</p>\r\n      </div>\r\n\r\n      <div class=\"card-body\">\r\n        <div class=\"row mb-4\">\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label\">Status Filter</label>\r\n            <select v-model=\"statusFilter\" class=\"form-select\">\r\n              <option value=\"\">All Statuses</option>\r\n              <option value=\"1\">New</option>\r\n              <option value=\"2\">Tested</option>\r\n              <option value=\"3\">Completed</option>\r\n              <option value=\"4\">Rejected</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label\">Blood Type</label>\r\n            <select v-model=\"bloodTypeFilter\" class=\"form-select\">\r\n              <option value=\"\">All Types</option>\r\n              <option\r\n                v-for=\"type in bloodTypes\"\r\n                :value=\"type.value\"\r\n                :key=\"type.id\"\r\n              >\r\n                {{ type.label }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4 d-flex align-items-end\">\r\n            <button @click=\"resetFilters\" class=\"btn btn-outline-secondary\">\r\n              <i class=\"ri-refresh-line me-1\"></i> Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"isLoading\" class=\"text-center py-5\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <p class=\"mt-2\">Loading requests...</p>\r\n        </div>\r\n\r\n        <div v-if=\"error\" class=\"alert alert-danger\">\r\n          <i class=\"ri-error-warning-line me-2\"></i>\r\n          {{ error }}\r\n          <button\r\n            @click=\"fetchRequests\"\r\n            class=\"btn btn-sm btn-outline-danger ms-3\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"!isLoading && !error && filteredRequests.length === 0\"\r\n          class=\"text-center py-5\"\r\n        >\r\n          <i class=\"ri-inbox-line display-4 text-muted\"></i>\r\n          <h5 class=\"mt-3\">No donation requests found</h5>\r\n          <p class=\"text-muted\">\r\n            Try adjusting your filters or check back later\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"!isLoading && filteredRequests.length > 0\"\r\n          class=\"table-responsive\"\r\n        >\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Donor</th>\r\n                <th>Blood Type</th>\r\n                <th>Request Date</th>\r\n                <th>Blood Stock</th>\r\n                <th>Quantity (ml)</th>\r\n                <th>Status</th>\r\n                <th>Test Result</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"request in filteredRequests\" :key=\"request.id\">\r\n                <td>\r\n                  <router-link\r\n                    :to=\"`/donors/${request.donor.id}`\"\r\n                    class=\"text-primary\"\r\n                  >\r\n                    {{ request.donor.name }}\r\n                  </router-link>\r\n                </td>\r\n                <td>\r\n                  <span\r\n                    class=\"badge\"\r\n                    :class=\"`bg-${getBloodTypeColor(request.blood_type)}`\"\r\n                  >\r\n                    {{ request.blood_type || \"Not specified\" }}\r\n                  </span>\r\n                </td>\r\n                <td>{{ formatDate(request.donation_date) }}</td>\r\n                <td>{{ request.blood_stock.name }}</td>\r\n                <td>{{ request.quantity }}</td>\r\n                <td>\r\n                  <span\r\n                    class=\"badge\"\r\n                    :class=\"`bg-${getStatusColor(request.status)}`\"\r\n                  >\r\n                    {{ getStatusLabel(request.status) }}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span\r\n                    v-if=\"request.virus_test_result !== null\"\r\n                    :class=\"\r\n                      request.virus_test_result ? 'text-success' : 'text-danger'\r\n                    \"\r\n                  >\r\n                    <i\r\n                      :class=\"\r\n                        request.virus_test_result\r\n                          ? 'ri-checkbox-circle-line'\r\n                          : 'ri-close-circle-line'\r\n                      \"\r\n                    ></i>\r\n                    {{ request.virus_test_result ? \"Negative\" : \"Positive\" }}\r\n                  </span>\r\n                  <span v-else class=\"text-muted\">Not tested</span>\r\n                </td>\r\n                <td>\r\n                  <div class=\"d-flex gap-2\">\r\n                    <button\r\n                      @click=\"openTestModal(request)\"\r\n                      class=\"btn btn-sm btn-outline-primary\"\r\n                      :disabled=\"request.status !== '1'\"\r\n                      :title=\"\r\n                        request.status !== '1'\r\n                          ? 'Only available for new requests'\r\n                          : 'Process test'\r\n                      \"\r\n                    >\r\n                      <i class=\"ri-flask-line\"></i> Test\r\n                    </button>\r\n\r\n                    <button\r\n                      @click=\"processDonation(request)\"\r\n                      class=\"btn btn-sm btn-outline-success\"\r\n                      :disabled=\"\r\n                        request.status !== '2' || !request.virus_test_result\r\n                      \"\r\n                      :title=\"\r\n                        request.status !== '2'\r\n                          ? 'Only available after testing'\r\n                          : !request.virus_test_result\r\n                          ? 'Cannot accept positive test results'\r\n                          : 'Process donation'\r\n                      \"\r\n                    >\r\n                      <i class=\"ri-drop-line\"></i> Donate\r\n                    </button>\r\n\r\n                    <button\r\n                      @click=\"rejectRequest(request)\"\r\n                      class=\"btn btn-sm btn-outline-danger\"\r\n                      :disabled=\"\r\n                        request.status === '3' || request.status === '4'\r\n                      \"\r\n                      :title=\"\r\n                        request.status === '3' || request.status === '4'\r\n                          ? 'Cannot reject completed/rejected requests'\r\n                          : 'Reject request'\r\n                      \"\r\n                    >\r\n                      <i class=\"ri-close-line\"></i> Reject\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n            <div class=\"text-muted\">\r\n              Showing {{ filteredRequests.length }} of\r\n              {{ requests.length }} requests\r\n            </div>\r\n            <nav>\r\n              <ul class=\"pagination\">\r\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n                  <button class=\"page-link\" @click=\"currentPage--\">\r\n                    Previous\r\n                  </button>\r\n                </li>\r\n                <li\r\n                  v-for=\"page in totalPages\"\r\n                  :key=\"page\"\r\n                  class=\"page-item\"\r\n                  :class=\"{ active: currentPage === page }\"\r\n                >\r\n                  <button class=\"page-link\" @click=\"currentPage = page\">\r\n                    {{ page }}\r\n                  </button>\r\n                </li>\r\n                <li\r\n                  class=\"page-item\"\r\n                  :class=\"{ disabled: currentPage === totalPages }\"\r\n                >\r\n                  <button class=\"page-link\" @click=\"currentPage++\">Next</button>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"showTestModal\"\r\n      class=\"modal fade show\"\r\n      style=\"display: block; background: rgba(0, 0, 0, 0.5)\"\r\n    >\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Process Test Result</h5>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              @click=\"closeTestModal\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">Test Result</label>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  v-model=\"testResult\"\r\n                  id=\"testNegative\"\r\n                  value=\"true\"\r\n                />\r\n                <label class=\"form-check-label text-success\" for=\"testNegative\">\r\n                  Negative (Acceptable)\r\n                </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  v-model=\"testResult\"\r\n                  id=\"testPositive\"\r\n                  value=\"false\"\r\n                />\r\n                <label class=\"form-check-label text-danger\" for=\"testPositive\">\r\n                  Positive (Reject)\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">Expiration Date</label>\r\n              <input\r\n                type=\"date\"\r\n                class=\"form-control\"\r\n                v-model=\"expirationDate\"\r\n                :min=\"minExpirationDate\"\r\n              />\r\n              <small class=\"text-muted\"\r\n                >Blood will expire after this date</small\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              @click=\"closeTestModal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              @click=\"submitTestResult\"\r\n              :disabled=\"!testResult || !expirationDate\"\r\n            >\r\n              Submit Result\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { format } from \"date-fns\";\r\nimport { axiosBusiness } from \"@/plugins/axios/axiosBusiness\";\r\nexport default {\r\n  name: \"DonationRequestsManagementView\",\r\n  data() {\r\n    return {\r\n      requests: [],\r\n      isLoading: false,\r\n      error: null,\r\n      statusFilter: \"\",\r\n      bloodTypeFilter: \"\",\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      showTestModal: false,\r\n      testResult: null,\r\n      expirationDate: null,\r\n      selectedRequest: null,\r\n      bloodTypes: [\r\n        { id: 1, value: \"A+\", label: \"A+\" },\r\n        { id: 2, value: \"A-\", label: \"A-\" },\r\n        { id: 3, value: \"B+\", label: \"B+\" },\r\n        { id: 4, value: \"B-\", label: \"B-\" },\r\n        { id: 5, value: \"AB+\", label: \"AB+\" },\r\n        { id: 6, value: \"AB-\", label: \"AB-\" },\r\n        { id: 7, value: \"O+\", label: \"O+\" },\r\n        { id: 8, value: \"O-\", label: \"O-\" },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredRequests() {\r\n      let filtered = this.requests;\r\n\r\n      // Apply status filter\r\n      if (this.statusFilter) {\r\n        filtered = filtered.filter((r) => r.status === this.statusFilter);\r\n      }\r\n\r\n      if (this.bloodTypeFilter) {\r\n        filtered = filtered.filter(\r\n          (r) => r.blood_type === this.bloodTypeFilter\r\n        );\r\n      }\r\n\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return filtered.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredRequests.length / this.itemsPerPage);\r\n    },\r\n    minExpirationDate() {\r\n      return format(new Date(), \"yyyy-MM-dd\");\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchRequests();\r\n  },\r\n  methods: {\r\n    async fetchRequests() {\r\n      this.isLoading = true;\r\n      this.error = null;\r\n      try {\r\n        const response = await axiosBusiness.get(\"donors/\");\r\n        this.requests = response.data;\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch requests:\", err);\r\n        this.error =\r\n          err.response?.data?.message ||\r\n          \"Failed to load donation requests. Please try again later.\";\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      return format(new Date(dateString), \"MMM dd, yyyy\");\r\n    },\r\n    getStatusLabel(status) {\r\n      switch (status) {\r\n        case \"1\":\r\n          return \"New\";\r\n        case \"2\":\r\n          return \"Tested\";\r\n        case \"3\":\r\n          return \"Completed\";\r\n        case \"4\":\r\n          return \"Rejected\";\r\n        default:\r\n          return \"Unknown\";\r\n      }\r\n    },\r\n    getStatusColor(status) {\r\n      switch (status) {\r\n        case \"1\":\r\n          return \"info\";\r\n        case \"2\":\r\n          return \"warning\";\r\n        case \"3\":\r\n          return \"success\";\r\n        case \"4\":\r\n          return \"danger\";\r\n        default:\r\n          return \"secondary\";\r\n      }\r\n    },\r\n    getBloodTypeColor(type) {\r\n      if (!type) return \"secondary\";\r\n      return type.includes(\"+\") ? \"danger\" : \"primary\";\r\n    },\r\n    resetFilters() {\r\n      this.statusFilter = \"\";\r\n      this.bloodTypeFilter = \"\";\r\n      this.currentPage = 1;\r\n    },\r\n    openTestModal(request) {\r\n      this.selectedRequest = request;\r\n      this.testResult = null;\r\n      this.expirationDate = null;\r\n      this.showTestModal = true;\r\n    },\r\n    closeTestModal() {\r\n      this.showTestModal = false;\r\n      this.selectedRequest = null;\r\n    },\r\n    async submitTestResult() {\r\n      try {\r\n        await axiosBusiness.patch(\r\n          `donors/donation-requests/${this.selectedRequest.id}`,\r\n          {\r\n            virus_test_result: this.testResult,\r\n            expiration_date: this.expirationDate,\r\n            status: \"2\", // Mark as tested\r\n          }\r\n        );\r\n        this.fetchRequests();\r\n        this.closeTestModal();\r\n      } catch (err) {\r\n        console.error(\"Failed to submit test result:\", err);\r\n        alert(err.response?.data?.message || \"Failed to update test result\");\r\n      }\r\n    },\r\n    async processDonation(request) {\r\n      if (\r\n        !confirm(\r\n          `Confirm that ${request.donor.user.first_name} has completed the donation?`\r\n        )\r\n      )\r\n        return;\r\n\r\n      try {\r\n        await axiosBusiness.patch(`/api/donation-requests/${request.id}/`, {\r\n          status: \"3\", \r\n        });\r\n        this.fetchRequests();\r\n      } catch (err) {\r\n        console.error(\"Failed to process donation:\", err);\r\n        alert(err.response?.data?.message || \"Failed to process donation\");\r\n      }\r\n    },\r\n    async rejectRequest(request) {\r\n      if (\r\n        !confirm(`Reject ${request.donor.user.first_name}'s donation request?`)\r\n      )\r\n        return;\r\n\r\n      try {\r\n        await axiosBusiness.patch(`/api/donation-requests/${request.id}/`, {\r\n          status: \"4\", \r\n        });\r\n        this.fetchRequests();\r\n      } catch (err) {\r\n        console.error(\"Failed to reject request:\", err);\r\n        alert(err.response?.data?.message || \"Failed to reject request\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.donation-requests-container {\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n}\r\n.badge {\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  padding: 0.35em 0.65em;\r\n}\r\n\r\n.bg-info {\r\n  background-color: #0dcaf0 !important;\r\n}\r\n\r\n.bg-warning {\r\n  background-color: #ffc107 !important;\r\n  color: #212529;\r\n}\r\n\r\n.bg-success {\r\n  background-color: #198754 !important;\r\n}\r\n\r\n.bg-danger {\r\n  background-color: #dc3545 !important;\r\n}\r\n\r\n.bg-primary {\r\n  background-color: #0d6efd !important;\r\n}\r\n\r\n.bg-secondary {\r\n  background-color: #6c757d !important;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal {\r\n  z-index: 1050; \r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.modal-content {\r\n  z-index: 1051;\r\n}\r\n\r\n.btn-sm {\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.75rem;\r\n}\r\n.modal.fade.show {\r\n  display: block !important;\r\n  background: rgba(0, 0, 0, 0.5) !important;\r\n}\r\n</style> -->\r\n<template>\r\n    <div class=\"donation-requests-container\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-white border-bottom-0\">\r\n          <h4 class=\"mb-0\">Donation Requests Management</h4>\r\n          <p class=\"text-muted mb-0\">Review and process donor requests</p>\r\n        </div>\r\n  \r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-4\">\r\n            <div class=\"col-md-4\">\r\n              <label class=\"form-label\">Status Filter</label>\r\n              <select v-model=\"statusFilter\" class=\"form-select\">\r\n                <option value=\"\">All Statuses</option>\r\n                <option value=\"1\">New</option>\r\n                <option value=\"2\">Tested</option>\r\n                <option value=\"3\">Completed</option>\r\n                <option value=\"4\">Rejected</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <label class=\"form-label\">Blood Type</label>\r\n              <select v-model=\"bloodTypeFilter\" class=\"form-select\">\r\n                <option value=\"\">All Types</option>\r\n                <option\r\n                  v-for=\"type in bloodTypes\"\r\n                  :value=\"type.value\"\r\n                  :key=\"type.id\"\r\n                >\r\n                  {{ type.label }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-4 d-flex align-items-end\">\r\n              <button @click=\"resetFilters\" class=\"btn btn-outline-secondary\">\r\n                <i class=\"ri-refresh-line me-1\"></i> Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n  \r\n          <div v-if=\"isLoading\" class=\"text-center py-5\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p class=\"mt-2\">Loading requests...</p>\r\n          </div>\r\n  \r\n          <div v-if=\"error\" class=\"alert alert-danger\">\r\n            <i class=\"ri-error-warning-line me-2\"></i>\r\n            {{ error }}\r\n            <button\r\n              @click=\"fetchRequests\"\r\n              class=\"btn btn-sm btn-outline-danger ms-3\"\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n  \r\n          <div\r\n            v-if=\"!isLoading && !error && filteredRequests.length === 0\"\r\n            class=\"text-center py-5\"\r\n          >\r\n            <i class=\"ri-inbox-line display-4 text-muted\"></i>\r\n            <h5 class=\"mt-3\">No donation requests found</h5>\r\n            <p class=\"text-muted\">\r\n              Try adjusting your filters or check back later\r\n            </p>\r\n          </div>\r\n  \r\n          <div\r\n            v-if=\"!isLoading && filteredRequests.length > 0\"\r\n            class=\"table-responsive\"\r\n          >\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Donor</th>\r\n                  <th>Blood Type</th>\r\n                  <th>Request Date</th>\r\n                  <th>Blood Stock</th>\r\n                  <th>Quantity (ml)</th>\r\n                  <th>Status</th>\r\n                  <th>Test Result</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"request in filteredRequests\" :key=\"request.id\">\r\n                  <td>\r\n                    <router-link\r\n                      :to=\"`/donors/${request.donor.id}`\"\r\n                      class=\"text-primary\"\r\n                    >\r\n                      {{ request.donor.name }}\r\n                    </router-link>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      class=\"badge\"\r\n                      :class=\"`bg-${getBloodTypeColor(request.blood_type)}`\"\r\n                    >\r\n                      {{ request.blood_type || \"Not specified\" }}\r\n                    </span>\r\n                  </td>\r\n                  <td>{{ formatDate(request.donation_date) }}</td>\r\n                  <td>{{ request.blood_stock.name }}</td>\r\n                  <td>{{ request.quantity }}</td>\r\n                  <td>\r\n                    <span\r\n                      class=\"badge\"\r\n                      :class=\"`bg-${getStatusColor(request.status)}`\"\r\n                    >\r\n                      {{ getStatusLabel(request.status) }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      v-if=\"request.virus_test_result !== null\"\r\n                      :class=\"\r\n                        request.virus_test_result ? 'text-success' : 'text-danger'\r\n                      \"\r\n                    >\r\n                      <i\r\n                        :class=\"\r\n                          request.virus_test_result\r\n                            ? 'ri-checkbox-circle-line'\r\n                            : 'ri-close-circle-line'\r\n                        \"\r\n                      ></i>\r\n                      {{ request.virus_test_result ? \"Negative\" : \"Positive\" }}\r\n                    </span>\r\n                    <span v-else class=\"text-muted\">Not tested</span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"d-flex gap-2\">\r\n                      <button\r\n                        @click=\"openTestModal(request)\"\r\n                        class=\"btn btn-sm btn-outline-primary\"\r\n                        :disabled=\"request.status !== '1'\"\r\n                        :title=\"\r\n                          request.status !== '1'\r\n                            ? 'Only available for new requests'\r\n                            : 'Process test'\r\n                        \"\r\n                      >\r\n                        <i class=\"ri-flask-line\"></i> Test\r\n                      </button>\r\n  \r\n                      <button\r\n                        @click=\"openDonationModal(request)\"\r\n                        class=\"btn btn-sm btn-outline-success\"\r\n                        :disabled=\"\r\n                          request.status !== '2' || !request.virus_test_result\r\n                        \"\r\n                        :title=\"\r\n                          request.status !== '2'\r\n                            ? 'Only available after testing'\r\n                            : !request.virus_test_result\r\n                            ? 'Cannot accept positive test results'\r\n                            : 'Process donation'\r\n                        \"\r\n                      >\r\n                        <i class=\"ri-drop-line\"></i> Donate\r\n                      </button>\r\n  \r\n                      <button\r\n                        @click=\"rejectRequest(request)\"\r\n                        class=\"btn btn-sm btn-outline-danger\"\r\n                        :disabled=\"\r\n                          request.status === '3' || request.status === '4'\r\n                        \"\r\n                        :title=\"\r\n                          request.status === '3' || request.status === '4'\r\n                            ? 'Cannot reject completed/rejected requests'\r\n                            : 'Reject request'\r\n                        \"\r\n                      >\r\n                        <i class=\"ri-close-line\"></i> Reject\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n  \r\n            <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n              <div class=\"text-muted\">\r\n                Showing {{ filteredRequests.length }} of\r\n                {{ requests.length }} requests\r\n              </div>\r\n              <nav>\r\n                <ul class=\"pagination\">\r\n                  <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n                    <button class=\"page-link\" @click=\"currentPage--\">\r\n                      Previous\r\n                    </button>\r\n                  </li>\r\n                  <li\r\n                    v-for=\"page in totalPages\"\r\n                    :key=\"page\"\r\n                    class=\"page-item\"\r\n                    :class=\"{ active: currentPage === page }\"\r\n                  >\r\n                    <button class=\"page-link\" @click=\"currentPage = page\">\r\n                      {{ page }}\r\n                    </button>\r\n                  </li>\r\n                  <li\r\n                    class=\"page-item\"\r\n                    :class=\"{ disabled: currentPage === totalPages }\"\r\n                  >\r\n                    <button class=\"page-link\" @click=\"currentPage++\">Next</button>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Test Result Modal -->\r\n      <div\r\n        v-if=\"showTestModal\"\r\n        class=\"modal fade show\"\r\n        style=\"display: block; background: rgba(0, 0, 0, 0.5)\"\r\n      >\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Process Test Result</h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                @click=\"closeTestModal\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Test Result</label>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    v-model=\"testResult\"\r\n                    id=\"testNegative\"\r\n                    value=\"true\"\r\n                  />\r\n                  <label class=\"form-check-label text-success\" for=\"testNegative\">\r\n                    Negative (Acceptable)\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    v-model=\"testResult\"\r\n                    id=\"testPositive\"\r\n                    value=\"false\"\r\n                  />\r\n                  <label class=\"form-check-label text-danger\" for=\"testPositive\">\r\n                    Positive (Reject)\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Expiration Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  v-model=\"expirationDate\"\r\n                  :min=\"minExpirationDate\"\r\n                />\r\n                <small class=\"text-muted\"\r\n                  >Blood will expire after this date</small\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                @click=\"closeTestModal\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                @click=\"submitTestResult\"\r\n                :disabled=\"!testResult || !expirationDate\"\r\n              >\r\n                Submit Result\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Donation Completion Modal -->\r\n      <div\r\n        v-if=\"showDonationModal\"\r\n        class=\"modal fade show\"\r\n        style=\"display: block; background: rgba(0, 0, 0, 0.5)\"\r\n      >\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Complete Donation Process</h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                @click=\"closeDonationModal\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form @submit.prevent=\"submitDonation\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label class=\"form-label\">Blood Type <span class=\"text-danger\">*</span></label>\r\n                    <select v-model=\"donationData.blood_type\" class=\"form-select\" required>\r\n                      <option value=\"\">Select Blood Type</option>\r\n                      <option v-for=\"type in bloodTypes\" :key=\"type.id\" :value=\"type.value\">\r\n                        {{ type.label }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label class=\"form-label\">Donation Date <span class=\"text-danger\">*</span></label>\r\n                    <input type=\"date\" class=\"form-control\" v-model=\"donationData.donation_date\" required>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label class=\"form-label\">Quantity (ml) <span class=\"text-danger\">*</span></label>\r\n                    <input type=\"number\" class=\"form-control\" v-model=\"donationData.quantity\" min=\"100\" max=\"500\" step=\"10\" required>\r\n                    <small class=\"text-muted\">Typically between 450-500ml</small>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label class=\"form-label\">Blood Stock</label>\r\n                    <input type=\"text\" class=\"form-control\" :value=\"selectedDonationRequest?.blood_stock?.name\" disabled>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-12 mb-3\">\r\n                    <label class=\"form-label\">Notes</label>\r\n                    <textarea class=\"form-control\" v-model=\"donationData.note\" rows=\"3\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                @click=\"closeDonationModal\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                @click=\"submitDonation\"\r\n              >\r\n                <i class=\"ri-check-line me-1\"></i> Complete Donation\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { format } from \"date-fns\";\r\n  import { axiosBusiness } from \"@/plugins/axios/axiosBusiness\";\r\n  \r\n  export default {\r\n    name: \"DonationRequestsManagementView\",\r\n    data() {\r\n      return {\r\n        requests: [],\r\n        isLoading: false,\r\n        error: null,\r\n        statusFilter: \"\",\r\n        bloodTypeFilter: \"\",\r\n        currentPage: 1,\r\n        itemsPerPage: 10,\r\n        showTestModal: false,\r\n        testResult: null,\r\n        expirationDate: null,\r\n        showDonationModal: false,\r\n        donationData: {\r\n          blood_type: '',\r\n          donation_date: format(new Date(), 'yyyy-MM-dd'),\r\n          quantity: 450,\r\n          note: ''\r\n        },\r\n        selectedRequest: null,\r\n        selectedDonationRequest: null,\r\n        bloodTypes: [\r\n          { id: 1, value: \"A+\", label: \"A+\" },\r\n          { id: 2, value: \"A-\", label: \"A-\" },\r\n          { id: 3, value: \"B+\", label: \"B+\" },\r\n          { id: 4, value: \"B-\", label: \"B-\" },\r\n          { id: 5, value: \"AB+\", label: \"AB+\" },\r\n          { id: 6, value: \"AB-\", label: \"AB-\" },\r\n          { id: 7, value: \"O+\", label: \"O+\" },\r\n          { id: 8, value: \"O-\", label: \"O-\" },\r\n        ],\r\n      };\r\n    },\r\n    computed: {\r\n      filteredRequests() {\r\n        let filtered = this.requests;\r\n  \r\n        if (this.statusFilter) {\r\n          filtered = filtered.filter((r) => r.status === this.statusFilter);\r\n        }\r\n  \r\n        if (this.bloodTypeFilter) {\r\n          filtered = filtered.filter(\r\n            (r) => r.blood_type === this.bloodTypeFilter\r\n          );\r\n        }\r\n  \r\n        const start = (this.currentPage - 1) * this.itemsPerPage;\r\n        const end = start + this.itemsPerPage;\r\n        return filtered.slice(start, end);\r\n      },\r\n      totalPages() {\r\n        return Math.ceil(this.filteredRequests.length / this.itemsPerPage);\r\n      },\r\n      minExpirationDate() {\r\n        return format(new Date(), \"yyyy-MM-dd\");\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchRequests();\r\n    },\r\n    methods: {\r\n      async fetchRequests() {\r\n        this.isLoading = true;\r\n        this.error = null;\r\n        try {\r\n          const response = await axiosBusiness.get(\"donors/\");\r\n          this.requests = response.data;\r\n        } catch (err) {\r\n          console.error(\"Failed to fetch requests:\", err);\r\n          this.error =\r\n            err.response?.data?.message ||\r\n            \"Failed to load donation requests. Please try again later.\";\r\n        } finally {\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      formatDate(dateString) {\r\n        return format(new Date(dateString), \"MMM dd, yyyy\");\r\n      },\r\n      getStatusLabel(status) {\r\n        switch (status) {\r\n          case \"1\":\r\n            return \"New\";\r\n          case \"2\":\r\n            return \"Tested\";\r\n          case \"3\":\r\n            return \"Completed\";\r\n          case \"4\":\r\n            return \"Rejected\";\r\n          default:\r\n            return \"Unknown\";\r\n        }\r\n      },\r\n      getStatusColor(status) {\r\n        switch (status) {\r\n          case \"1\":\r\n            return \"info\";\r\n          case \"2\":\r\n            return \"warning\";\r\n          case \"3\":\r\n            return \"success\";\r\n          case \"4\":\r\n            return \"danger\";\r\n          default:\r\n            return \"secondary\";\r\n        }\r\n      },\r\n      getBloodTypeColor(type) {\r\n        if (!type) return \"secondary\";\r\n        return type.includes(\"+\") ? \"danger\" : \"primary\";\r\n      },\r\n      resetFilters() {\r\n        this.statusFilter = \"\";\r\n        this.bloodTypeFilter = \"\";\r\n        this.currentPage = 1;\r\n      },\r\n      openTestModal(request) {\r\n        this.selectedRequest = request;\r\n        this.testResult = null;\r\n        this.expirationDate = null;\r\n        this.showTestModal = true;\r\n      },\r\n      closeTestModal() {\r\n        this.showTestModal = false;\r\n        this.selectedRequest = null;\r\n      },\r\n      async submitTestResult() {\r\n        try {\r\n          await axiosBusiness.patch(\r\n            `donors/donation-requests/${this.selectedRequest.id}`,\r\n            {\r\n              virus_test_result: this.testResult,\r\n              expiration_date: this.expirationDate,\r\n              status: \"2\", // Mark as tested\r\n            }\r\n          );\r\n          this.fetchRequests();\r\n          this.closeTestModal();\r\n        } catch (err) {\r\n          console.error(\"Failed to submit test result:\", err);\r\n          alert(err.response?.data?.message || \"Failed to update test result\");\r\n        }\r\n      },\r\n      openDonationModal(request) {\r\n        this.selectedDonationRequest = request;\r\n        this.donationData = {\r\n          blood_type: request.blood_type || '',\r\n          donation_date: format(new Date(), 'yyyy-MM-dd'),\r\n          quantity: request.quantity || 450,\r\n          note: request.note || ''\r\n        };\r\n        this.showDonationModal = true;\r\n      },\r\n      closeDonationModal() {\r\n        this.showDonationModal = false;\r\n        this.selectedDonationRequest = null;\r\n      },\r\n      async submitDonation() {\r\n        try {\r\n          if (!this.donationData.blood_type || !this.donationData.donation_date || !this.donationData.quantity) {\r\n            alert('Please fill all required fields');\r\n            return;\r\n          }\r\n          \r\n          const quantity = parseFloat(this.donationData.quantity);\r\n          if (isNaN(quantity) ){\r\n            alert('Please enter a valid quantity');\r\n            return;\r\n          }\r\n  \r\n          await axiosBusiness.patch(\r\n            `donors/donation-requests/${this.selectedDonationRequest.id}/complete/`, \r\n            {\r\n              blood_type: this.donationData.blood_type,\r\n              donation_date: this.donationData.donation_date,\r\n              quantity: quantity,\r\n              note: this.donationData.note,\r\n              status: \"3\" // Mark as completed\r\n            }\r\n          );\r\n          \r\n          this.fetchRequests();\r\n          this.closeDonationModal();\r\n          alert('Donation completed successfully!');\r\n        } catch (err) {\r\n          console.error('Failed to complete donation:', err);\r\n          alert(err.response?.data?.message || 'Failed to complete donation');\r\n        }\r\n      },\r\n      async rejectRequest(request) {\r\n        if (\r\n          !confirm(`Reject ${request.donor.user.first_name}'s donation request?`)\r\n        )\r\n          return;\r\n  \r\n        try {\r\n          await axiosBusiness.patch(`/api/donation-requests/${request.id}/`, {\r\n            status: \"4\", \r\n          });\r\n          this.fetchRequests();\r\n        } catch (err) {\r\n          console.error(\"Failed to reject request:\", err);\r\n          alert(err.response?.data?.message || \"Failed to reject request\");\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .donation-requests-container {\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  .badge {\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    padding: 0.35em 0.65em;\r\n  }\r\n  \r\n  .bg-info {\r\n    background-color: #0dcaf0 !important;\r\n  }\r\n  \r\n  .bg-warning {\r\n    background-color: #ffc107 !important;\r\n    color: #212529;\r\n  }\r\n  \r\n  .bg-success {\r\n    background-color: #198754 !important;\r\n  }\r\n  \r\n  .bg-danger {\r\n    background-color: #dc3545 !important;\r\n  }\r\n  \r\n  .bg-primary {\r\n    background-color: #0d6efd !important;\r\n  }\r\n  \r\n  .bg-secondary {\r\n    background-color: #6c757d !important;\r\n  }\r\n  \r\n  .table th,\r\n  .table td {\r\n    vertical-align: middle;\r\n  }\r\n  \r\n  .modal {\r\n    z-index: 1050;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .modal-content {\r\n    z-index: 1051;\r\n  }\r\n  \r\n  .btn-sm {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 0.75rem;\r\n  }\r\n  .modal.fade.show {\r\n    display: block !important;\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  \r\n  .form-label .text-danger {\r\n    color: #dc3545;\r\n  }\r\n  </style>"],"mappings":";;AAk5BE,SAASA,MAAK,QAAS,UAAU;AACjC,SAASC,aAAY,QAAS,+BAA+B;AAE7D,eAAe;EACbC,IAAI,EAAE,gCAAgC;EACtCC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,KAAK;MACxBC,YAAY,EAAE;QACZC,UAAU,EAAE,EAAE;QACdC,aAAa,EAAEjB,MAAM,CAAC,IAAIkB,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC;QAC/CC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE;MACR,CAAC;MACDC,eAAe,EAAE,IAAI;MACrBC,uBAAuB,EAAE,IAAI;MAC7BC,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAM,CAAC,EACrC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAM,CAAC,EACrC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IAEvC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,IAAIC,QAAO,GAAI,IAAI,CAACzB,QAAQ;MAE5B,IAAI,IAAI,CAACG,YAAY,EAAE;QACrBsB,QAAO,GAAIA,QAAQ,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,IAAI,CAACzB,YAAY,CAAC;MACnE;MAEA,IAAI,IAAI,CAACC,eAAe,EAAE;QACxBqB,QAAO,GAAIA,QAAQ,CAACC,MAAM,CACvBC,CAAC,IAAKA,CAAC,CAACf,UAAS,KAAM,IAAI,CAACR,eAC/B,CAAC;MACH;MAEA,MAAMyB,KAAI,GAAI,CAAC,IAAI,CAACxB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMwB,GAAE,GAAID,KAAI,GAAI,IAAI,CAACvB,YAAY;MACrC,OAAOmB,QAAQ,CAACM,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACnC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACV,gBAAgB,CAACW,MAAK,GAAI,IAAI,CAAC7B,YAAY,CAAC;IACpE,CAAC;IACD8B,iBAAiBA,CAAA,EAAG;MAClB,OAAOxC,MAAM,CAAC,IAAIkB,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC;IACzC;EACF,CAAC;EACDuB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACrC,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI;QACF,MAAMsC,QAAO,GAAI,MAAM3C,aAAa,CAAC4C,GAAG,CAAC,SAAS,CAAC;QACnD,IAAI,CAACzC,QAAO,GAAIwC,QAAQ,CAACzC,IAAI;MAC/B,EAAE,OAAO2C,GAAG,EAAE;QACZC,OAAO,CAACzC,KAAK,CAAC,2BAA2B,EAAEwC,GAAG,CAAC;QAC/C,IAAI,CAACxC,KAAI,GACPwC,GAAG,CAACF,QAAQ,EAAEzC,IAAI,EAAE6C,OAAM,IAC1B,2DAA2D;MAC/D,UAAU;QACR,IAAI,CAAC3C,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACD4C,UAAUA,CAACC,UAAU,EAAE;MACrB,OAAOlD,MAAM,CAAC,IAAIkB,IAAI,CAACgC,UAAU,CAAC,EAAE,cAAc,CAAC;IACrD,CAAC;IACDC,cAAcA,CAACnB,MAAM,EAAE;MACrB,QAAQA,MAAM;QACZ,KAAK,GAAG;UACN,OAAO,KAAK;QACd,KAAK,GAAG;UACN,OAAO,QAAQ;QACjB,KAAK,GAAG;UACN,OAAO,WAAW;QACpB,KAAK,GAAG;UACN,OAAO,UAAU;QACnB;UACE,OAAO,SAAS;MACpB;IACF,CAAC;IACDoB,cAAcA,CAACpB,MAAM,EAAE;MACrB,QAAQA,MAAM;QACZ,KAAK,GAAG;UACN,OAAO,MAAM;QACf,KAAK,GAAG;UACN,OAAO,SAAS;QAClB,KAAK,GAAG;UACN,OAAO,SAAS;QAClB,KAAK,GAAG;UACN,OAAO,QAAQ;QACjB;UACE,OAAO,WAAW;MACtB;IACF,CAAC;IACDqB,iBAAiBA,CAACC,IAAI,EAAE;MACtB,IAAI,CAACA,IAAI,EAAE,OAAO,WAAW;MAC7B,OAAOA,IAAI,CAACC,QAAQ,CAAC,GAAG,IAAI,QAAO,GAAI,SAAS;IAClD,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACjD,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,WAAU,GAAI,CAAC;IACtB,CAAC;IACDgD,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACrC,eAAc,GAAIqC,OAAO;MAC9B,IAAI,CAAC9C,UAAS,GAAI,IAAI;MACtB,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACF,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDgD,cAAcA,CAAA,EAAG;MACf,IAAI,CAAChD,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACU,eAAc,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMuC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAM3D,aAAa,CAAC4D,KAAK,CACvB,4BAA4B,IAAI,CAACxC,eAAe,CAACG,EAAE,EAAE,EACrD;UACEsC,iBAAiB,EAAE,IAAI,CAAClD,UAAU;UAClCmD,eAAe,EAAE,IAAI,CAAClD,cAAc;UACpCmB,MAAM,EAAE,GAAG,CAAE;QACf,CACF,CAAC;QACD,IAAI,CAACU,aAAa,CAAC,CAAC;QACpB,IAAI,CAACiB,cAAc,CAAC,CAAC;MACvB,EAAE,OAAOb,GAAG,EAAE;QACZC,OAAO,CAACzC,KAAK,CAAC,+BAA+B,EAAEwC,GAAG,CAAC;QACnDkB,KAAK,CAAClB,GAAG,CAACF,QAAQ,EAAEzC,IAAI,EAAE6C,OAAM,IAAK,8BAA8B,CAAC;MACtE;IACF,CAAC;IACDiB,iBAAiBA,CAACP,OAAO,EAAE;MACzB,IAAI,CAACpC,uBAAsB,GAAIoC,OAAO;MACtC,IAAI,CAAC3C,YAAW,GAAI;QAClBC,UAAU,EAAE0C,OAAO,CAAC1C,UAAS,IAAK,EAAE;QACpCC,aAAa,EAAEjB,MAAM,CAAC,IAAIkB,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC;QAC/CC,QAAQ,EAAEuC,OAAO,CAACvC,QAAO,IAAK,GAAG;QACjCC,IAAI,EAAEsC,OAAO,CAACtC,IAAG,IAAK;MACxB,CAAC;MACD,IAAI,CAACN,iBAAgB,GAAI,IAAI;IAC/B,CAAC;IACDoD,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACpD,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACQ,uBAAsB,GAAI,IAAI;IACrC,CAAC;IACD,MAAM6C,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,CAAC,IAAI,CAACpD,YAAY,CAACC,UAAS,IAAK,CAAC,IAAI,CAACD,YAAY,CAACE,aAAY,IAAK,CAAC,IAAI,CAACF,YAAY,CAACI,QAAQ,EAAE;UACpG6C,KAAK,CAAC,iCAAiC,CAAC;UACxC;QACF;QAEA,MAAM7C,QAAO,GAAIiD,UAAU,CAAC,IAAI,CAACrD,YAAY,CAACI,QAAQ,CAAC;QACvD,IAAIkD,KAAK,CAAClD,QAAQ,GAAG;UACnB6C,KAAK,CAAC,+BAA+B,CAAC;UACtC;QACF;QAEA,MAAM/D,aAAa,CAAC4D,KAAK,CACvB,4BAA4B,IAAI,CAACvC,uBAAuB,CAACE,EAAE,YAAY,EACvE;UACER,UAAU,EAAE,IAAI,CAACD,YAAY,CAACC,UAAU;UACxCC,aAAa,EAAE,IAAI,CAACF,YAAY,CAACE,aAAa;UAC9CE,QAAQ,EAAEA,QAAQ;UAClBC,IAAI,EAAE,IAAI,CAACL,YAAY,CAACK,IAAI;UAC5BY,MAAM,EAAE,GAAE,CAAE;QACd,CACF,CAAC;QAED,IAAI,CAACU,aAAa,CAAC,CAAC;QACpB,IAAI,CAACwB,kBAAkB,CAAC,CAAC;QACzBF,KAAK,CAAC,kCAAkC,CAAC;MAC3C,EAAE,OAAOlB,GAAG,EAAE;QACZC,OAAO,CAACzC,KAAK,CAAC,8BAA8B,EAAEwC,GAAG,CAAC;QAClDkB,KAAK,CAAClB,GAAG,CAACF,QAAQ,EAAEzC,IAAI,EAAE6C,OAAM,IAAK,6BAA6B,CAAC;MACrE;IACF,CAAC;IACD,MAAMsB,aAAaA,CAACZ,OAAO,EAAE;MAC3B,IACE,CAACa,OAAO,CAAC,UAAUb,OAAO,CAACc,KAAK,CAACC,IAAI,CAACC,UAAU,sBAAsB,GAEtE;MAEF,IAAI;QACF,MAAMzE,aAAa,CAAC4D,KAAK,CAAC,0BAA0BH,OAAO,CAAClC,EAAE,GAAG,EAAE;UACjEQ,MAAM,EAAE;QACV,CAAC,CAAC;QACF,IAAI,CAACU,aAAa,CAAC,CAAC;MACtB,EAAE,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACzC,KAAK,CAAC,2BAA2B,EAAEwC,GAAG,CAAC;QAC/CkB,KAAK,CAAClB,GAAG,CAACF,QAAQ,EAAEzC,IAAI,EAAE6C,OAAM,IAAK,0BAA0B,CAAC;MAClE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}