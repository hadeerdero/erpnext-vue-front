{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PreloaderComponent from \"./components/global/PreloaderComponent.vue\";\nimport SidebarComponent from \"./components/layout/SidebarComponent.vue\";\nimport HeaderComponent from \"./components/layout/HeaderComponent.vue\";\nimport FooterComponent from \"./components/layout/FooterComponent.vue\";\nimport { mapGetters, mapState } from \"vuex\";\nexport default {\n  components: {\n    PreloaderComponent,\n    SidebarComponent,\n    HeaderComponent,\n    FooterComponent\n  },\n  data() {\n    return {\n      isLoading: true,\n      isSidebarCollapsed: false\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", [\"isAuthenticated\", \"homePage\"]),\n    // Include homePage getter\n    ...mapState(\"auth\", [\"status\"]),\n    // Track auth status if needed\n    showLayoutComponents() {\n      return this.isAuthenticated && this.$route.path !== \"/\";\n    }\n  },\n  methods: {\n    toggleSidebar() {\n      this.isSidebarCollapsed = !this.isSidebarCollapsed;\n    },\n    checkAuthAndRedirect() {\n      if (this.isAuthenticated && this.$route.path === \"/\") {\n        // Redirect to homePage (default: \"/app/home\") if authenticated\n        this.$router.push('/dashboard');\n      }\n    }\n  },\n  mounted() {\n    this.checkAuthAndRedirect(); // Check auth status immediately\n    this.$store.dispatch('auth/initializeApp');\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 2000);\n  },\n  watch: {\n    // Re-check auth status when route changes\n    $route() {\n      this.checkAuthAndRedirect();\n    },\n    // Optional: Watch auth status changes (if login happens elsewhere)\n    isAuthenticated(newVal) {\n      if (newVal && this.$route.path === \"/\") {\n        this.$router.push('/dashboard');\n      }\n    }\n  }\n};","map":{"version":3,"names":["PreloaderComponent","SidebarComponent","HeaderComponent","FooterComponent","mapGetters","mapState","components","data","isLoading","isSidebarCollapsed","computed","showLayoutComponents","isAuthenticated","$route","path","methods","toggleSidebar","checkAuthAndRedirect","$router","push","mounted","$store","dispatch","setTimeout","watch","newVal"],"sources":["D:\\hadeerwork\\erpnext-vue-front\\src\\App.vue"],"sourcesContent":["\r\n<template>\r\n  <PreloaderComponent v-if=\"isLoading\" />\r\n\r\n  <div class=\"app-container\" v-else>\r\n    <SidebarComponent\r\n      v-if=\"showLayoutComponents\"\r\n      :isCollapsed=\"isSidebarCollapsed\"\r\n    />\r\n\r\n    <div class=\"main-content\" :class=\"showLayoutComponents ? '' : 'p-0'\">\r\n      <HeaderComponent\r\n        v-if=\"showLayoutComponents\"\r\n        @toggle-sidebar=\"toggleSidebar\"\r\n      />\r\n\r\n      <div class=\"main-content-container overflow-hidden\">\r\n        <router-view />\r\n      </div>\r\n\r\n      <FooterComponent v-if=\"showLayoutComponents\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<!-- <script>\r\nimport PreloaderComponent from \"./components/global/PreloaderComponent.vue\";\r\nimport SidebarComponent from \"./components/layout/SidebarComponent.vue\";\r\nimport HeaderComponent from \"./components/layout/HeaderComponent.vue\";\r\nimport FooterComponent from \"./components/layout/FooterComponent.vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    PreloaderComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      isSidebarCollapsed: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"isAuthenticated\"]),\r\n    showLayoutComponents() {\r\n      // Hide layout components if not authenticated OR if on root route\r\n      return this.isAuthenticated && this.$route.path !== \"/\";\r\n    },\r\n  },\r\n  methods: {\r\n    toggleSidebar() {\r\n      this.isSidebarCollapsed = !this.isSidebarCollapsed;\r\n    },\r\n  },\r\n  mounted() {\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 2000);\r\n  },\r\n  watch: {\r\n    // Watch for route changes to handle layout visibility\r\n    $route(to) {\r\n      if (to.path === \"/\") {\r\n        // Additional logic when navigating to root if needed\r\n      }\r\n    },\r\n  },\r\n};\r\n</script> -->\r\n<script>\r\nimport PreloaderComponent from \"./components/global/PreloaderComponent.vue\";\r\nimport SidebarComponent from \"./components/layout/SidebarComponent.vue\";\r\nimport HeaderComponent from \"./components/layout/HeaderComponent.vue\";\r\nimport FooterComponent from \"./components/layout/FooterComponent.vue\";\r\nimport { mapGetters, mapState } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    PreloaderComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      isSidebarCollapsed: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"isAuthenticated\", \"homePage\"]), // Include homePage getter\r\n    ...mapState(\"auth\", [\"status\"]), // Track auth status if needed\r\n    showLayoutComponents() {\r\n      return this.isAuthenticated && this.$route.path !== \"/\";\r\n    },\r\n  },\r\n  methods: {\r\n    toggleSidebar() {\r\n      this.isSidebarCollapsed = !this.isSidebarCollapsed;\r\n    },\r\n    checkAuthAndRedirect() {\r\n      if (this.isAuthenticated && this.$route.path === \"/\") {\r\n        // Redirect to homePage (default: \"/app/home\") if authenticated\r\n        this.$router.push('/dashboard');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.checkAuthAndRedirect(); // Check auth status immediately\r\n  this.$store.dispatch('auth/initializeApp');\r\n    \r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 2000);\r\n  },\r\n  watch: {\r\n    // Re-check auth status when route changes\r\n    $route() {\r\n      this.checkAuthAndRedirect();\r\n    },\r\n    // Optional: Watch auth status changes (if login happens elsewhere)\r\n    isAuthenticated(newVal) {\r\n      if (newVal && this.$route.path === \"/\") {\r\n        this.$router.push('/dashboard');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-container {\r\n  display: flex;\r\n  min-height: 100vh;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: margin-left 0.3s ease;\r\n}\r\n\r\n.main-content-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.p-0 {\r\n  padding: 0 !important;\r\n}\r\n</style>\r\n"],"mappings":";AAyEA,OAAOA,kBAAiB,MAAO,4CAA4C;AAC3E,OAAOC,gBAAe,MAAO,0CAA0C;AACvE,OAAOC,eAAc,MAAO,yCAAyC;AACrE,OAAOC,eAAc,MAAO,yCAAyC;AACrE,SAASC,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,UAAU,EAAE;IACVN,kBAAkB;IAClBC,gBAAgB;IAChBC,eAAe;IACfC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGN,UAAU,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;IAAE;IACxD,GAAGC,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;IAAE;IACjCM,oBAAoBA,CAAA,EAAG;MACrB,OAAO,IAAI,CAACC,eAAc,IAAK,IAAI,CAACC,MAAM,CAACC,IAAG,KAAM,GAAG;IACzD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACP,kBAAiB,GAAI,CAAC,IAAI,CAACA,kBAAkB;IACpD,CAAC;IACDQ,oBAAoBA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACL,eAAc,IAAK,IAAI,CAACC,MAAM,CAACC,IAAG,KAAM,GAAG,EAAE;QACpD;QACA,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,oBAAoB,CAAC,CAAC,EAAE;IAC/B,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,oBAAoB,CAAC;IAExCC,UAAU,CAAC,MAAM;MACf,IAAI,CAACf,SAAQ,GAAI,KAAK;IACxB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACDgB,KAAK,EAAE;IACL;IACAX,MAAMA,CAAA,EAAG;MACP,IAAI,CAACI,oBAAoB,CAAC,CAAC;IAC7B,CAAC;IACD;IACAL,eAAeA,CAACa,MAAM,EAAE;MACtB,IAAIA,MAAK,IAAK,IAAI,CAACZ,MAAM,CAACC,IAAG,KAAM,GAAG,EAAE;QACtC,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}