{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { Tooltip } from 'bootstrap';\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      searchQuery: '',\n      darkMode: false,\n      unreadNotifications: 3,\n      apps: [{\n        name: 'Figma',\n        url: 'https://www.figma.com/',\n        icon: 'figma.svg'\n      }, {\n        name: 'Dribbble',\n        url: 'https://www.dribbble.com/',\n        icon: 'dribbble.svg'\n      }, {\n        name: 'Spotify',\n        url: 'https://www.spotify.com/',\n        icon: 'spotify.svg'\n      }, {\n        name: 'Github',\n        url: 'https://www.github.com/',\n        icon: 'github.svg'\n      }, {\n        name: 'GDrive',\n        url: 'https://www.google.com/drive/',\n        icon: 'gdrive.svg'\n      }, {\n        name: 'Trello',\n        url: 'https://www.trello.com/',\n        icon: 'trello.svg'\n      }, {\n        name: 'Slack',\n        url: 'https://www.slack.com/',\n        icon: 'slak.svg'\n      }, {\n        name: 'Pinterest',\n        url: 'https://www.pinterest.com/',\n        icon: 'pinterest.svg'\n      }, {\n        name: 'Facebook',\n        url: 'https://www.facebook.com/',\n        icon: 'facebook.svg'\n      }, {\n        name: 'Linkedin',\n        url: 'https://www.linkedin.com/',\n        icon: 'linkedin.svg'\n      }],\n      languages: [{\n        name: 'English',\n        code: 'en',\n        flag: 'usa.svg'\n      }, {\n        name: 'Canada',\n        code: 'ca',\n        flag: 'canada.svg'\n      }, {\n        name: 'Germany',\n        code: 'de',\n        flag: 'germany.svg'\n      }, {\n        name: 'Portugal',\n        code: 'pt',\n        flag: 'portugal.svg'\n      }, {\n        name: 'Spain',\n        code: 'es',\n        flag: 'spain.svg'\n      }],\n      notifications: [{\n        id: 1,\n        message: 'You have requested to <span class=\"fw-semibold\">withdrawal</span>',\n        icon: 'sms',\n        type: 'primary',\n        time: new Date(Date.now() - 2 * 60 * 60 * 1000),\n        // 2 hours ago\n        seen: true\n      }, {\n        id: 2,\n        message: 'A new user added in Trezo',\n        icon: 'person',\n        type: 'info',\n        time: new Date(Date.now() - 3 * 60 * 60 * 1000),\n        // 3 hours ago\n        seen: false\n      }, {\n        id: 3,\n        message: 'You have requested to <span class=\"fw-semibold\">withdrawal</span>',\n        icon: 'mark_email_unread',\n        type: 'success',\n        time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n        // 1 day ago\n        seen: true\n      }],\n      user: {\n        name: 'Olivia',\n        fullName: 'Olivia John',\n        role: 'Marketing Manager',\n        avatar: 'administrator.jpg'\n      },\n      profileMenu: [{\n        icon: 'account_circle',\n        text: 'My Profile',\n        route: '/profile'\n      }, {\n        icon: 'chat',\n        text: 'Messages',\n        route: '/chat'\n      }, {\n        icon: 'format_list_bulleted',\n        text: 'My Task',\n        route: '/tasks'\n      }, {\n        icon: 'credit_card',\n        text: 'Billing',\n        route: '/billing'\n      }, {\n        icon: 'settings',\n        text: 'Settings',\n        route: '/settings'\n      }, {\n        icon: 'support',\n        text: 'Support',\n        route: '/support'\n      }, {\n        icon: 'lock',\n        text: 'Lock Screen',\n        route: '/lock-screen'\n      }],\n      themeSettingsTooltip: 'Click On Theme Settings'\n    };\n  },\n  methods: {\n    getImageUrl(imageName) {\n      // This assumes your images are in the assets/images directory\n      return `/assets/images/${imageName}`;\n      // return imageName\n    },\n    toggleSidebar() {\n      console.log(\"toggle side bar \");\n      this.$emit('toggle-sidebar');\n    },\n    handleSearch() {\n      if (this.searchQuery.trim()) {\n        this.$emit('search', this.searchQuery);\n      }\n    },\n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n      document.body.classList.toggle('dark-mode', this.darkMode);\n      localStorage.setItem('darkMode', this.darkMode);\n    },\n    changeLanguage(langCode) {\n      this.$i18n.locale = langCode;\n      localStorage.setItem('language', langCode);\n    },\n    toggleFullscreen() {\n      if (!document.fullscreenElement) {\n        document.documentElement.requestFullscreen().catch(err => {\n          console.error(`Error attempting to enable fullscreen: ${err.message}`);\n        });\n      } else {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        }\n      }\n    },\n    handleNotificationClick(notification) {\n      if (!notification.seen) {\n        notification.seen = true;\n        this.unreadNotifications--;\n      }\n      // Handle navigation to notification target\n      this.$emit('notification-click', notification);\n    },\n    clearNotifications() {\n      this.notifications.forEach(n => n.seen = true);\n      this.unreadNotifications = 0;\n    },\n    viewAllNotifications() {\n      this.$router.push('/notifications');\n    },\n    logout() {\n      // Implement logout logic\n      this.$emit('logout');\n    },\n    formatTime(date) {\n      const now = new Date();\n      const diff = now - date;\n      const minute = 60 * 1000;\n      const hour = 60 * minute;\n      const day = 24 * hour;\n      if (diff < minute) {\n        return 'Just now';\n      } else if (diff < hour) {\n        const minutes = Math.floor(diff / minute);\n        return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\n      } else if (diff < day) {\n        const hours = Math.floor(diff / hour);\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n      } else {\n        const days = Math.floor(diff / day);\n        return `${days} day${days > 1 ? 's' : ''} ago`;\n      }\n    },\n    initializeDarkMode() {\n      // Check for saved preference or system preference\n      const savedMode = localStorage.getItem('darkMode');\n      if (savedMode !== null) {\n        this.darkMode = savedMode === 'true';\n      } else {\n        // Fallback to system preference if no saved setting\n        this.darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      }\n\n      // Apply the mode\n      this.applyDarkMode(this.darkMode);\n    },\n    applyDarkMode(isDark) {\n      if (isDark) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    },\n    initializeTooltips() {\n      try {\n        const tooltipElements = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n        Array.from(tooltipElements).forEach(element => {\n          new Tooltip(element, {\n            trigger: 'hover focus',\n            // Show on hover or focus\n            placement: 'left' // Default placement\n            // You can add more options here as needed\n          });\n        });\n      } catch (error) {\n        console.error('Error initializing tooltips:', error);\n      }\n    }\n  },\n  // mounted() {\n  //   // Initialize dark mode from localStorage\n  //   this.darkMode = localStorage.getItem('darkMode') === 'true';\n  //   if (this.darkMode) {\n  //     document.body.classList.add('dark-mode');\n  //   }\n\n  //   // Initialize tooltips\n  //   const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n  //   tooltipTriggerList.map(function (tooltipTriggerEl) {\n  //     return new bootstrap.Tooltip(tooltipTriggerEl);\n  //   });\n  // }\n  mounted() {\n    this.initializeDarkMode();\n    this.initializeTooltips();\n  }\n  //   methods: {\n  //     initializeDarkMode() {\n  //       // Check for saved preference or system preference\n  //       const savedMode = localStorage.getItem('darkMode');\n\n  //       if (savedMode !== null) {\n  //         this.darkMode = savedMode === 'true';\n  //       } else {\n  //         // Fallback to system preference if no saved setting\n  //         this.darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  //       }\n\n  //       // Apply the mode\n  //       this.applyDarkMode(this.darkMode);\n  //     },\n\n  //     applyDarkMode(isDark) {\n  //       if (isDark) {\n  //         document.body.classList.add('dark-mode');\n  //       } else {\n  //         document.body.classList.remove('dark-mode');\n  //       }\n  //     },\n\n  //     initializeTooltips() {\n  //       try {\n  //         const tooltipElements = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n\n  //         Array.from(tooltipElements).forEach(element => {\n  //           new Tooltip(element, {\n  //             trigger: 'hover focus', // Show on hover or focus\n  //             placement: 'left',     // Default placement\n  //             // You can add more options here as needed\n  //           });\n  //         });\n  //       } catch (error) {\n  //         console.error('Error initializing tooltips:', error);\n  //       }\n  //     }\n  //   }\n};","map":{"version":3,"names":["Tooltip","name","data","searchQuery","darkMode","unreadNotifications","apps","url","icon","languages","code","flag","notifications","id","message","type","time","Date","now","seen","user","fullName","role","avatar","profileMenu","text","route","themeSettingsTooltip","methods","getImageUrl","imageName","toggleSidebar","console","log","$emit","handleSearch","trim","toggleDarkMode","document","body","classList","toggle","localStorage","setItem","changeLanguage","langCode","$i18n","locale","toggleFullscreen","fullscreenElement","documentElement","requestFullscreen","catch","err","error","exitFullscreen","handleNotificationClick","notification","clearNotifications","forEach","n","viewAllNotifications","$router","push","logout","formatTime","date","diff","minute","hour","day","minutes","Math","floor","hours","days","initializeDarkMode","savedMode","getItem","window","matchMedia","matches","applyDarkMode","isDark","add","remove","initializeTooltips","tooltipElements","querySelectorAll","Array","from","element","trigger","placement","mounted"],"sources":["D:\\hadeerwork\\erpnext-vue-front\\src\\components\\layout\\HeaderComponent.vue"],"sourcesContent":["<template>\r\n    <header class=\"header-area bg-white mb-4 rounded-bottom-15\" id=\"header-area\">\r\n      <div class=\"row align-items-center\">\r\n        <!-- Left Header Content -->\r\n        <div class=\"col-lg-4 col-sm-6\">\r\n          <div class=\"left-header-content\">\r\n            <ul class=\"d-flex align-items-center ps-0 mb-0 list-unstyled justify-content-center justify-content-sm-start\">\r\n              <!-- Menu Toggle Button -->\r\n              <li>\r\n                <button \r\n                  class=\"header-burger-menu bg-transparent p-0 border-0\" \r\n                  @click=\"toggleSidebar\"\r\n                >\r\n                  <span class=\"material-symbols-outlined\">menu</span>\r\n                </button>\r\n              </li>\r\n              \r\n              <!-- Search Form -->\r\n              <li>\r\n                <form class=\"src-form position-relative\" @submit.prevent=\"handleSearch\">\r\n                  <input \r\n                    type=\"text\" \r\n                    class=\"form-control\" \r\n                    placeholder=\"Search here.....\"\r\n                    v-model=\"searchQuery\"\r\n                  >\r\n                  <button type=\"submit\" class=\"src-btn position-absolute top-50 end-0 translate-middle-y bg-transparent p-0 border-0\">\r\n                    <span class=\"material-symbols-outlined\">search</span>\r\n                  </button>\r\n                </form>\r\n              </li>\r\n              \r\n              <!-- Apps Dropdown -->\r\n              <li>\r\n                <div class=\"dropdown notifications apps\">\r\n                  <button \r\n                    class=\"btn btn-secondary border-0 p-0 position-relative\" \r\n                    type=\"button\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <span class=\"material-symbols-outlined\">apps</span>\r\n                  </button>\r\n                  <div class=\"dropdown-menu dropdown-lg p-0 border-0 py-4 px-3 max-h-312\" data-simplebar>\r\n                    <div class=\"notification-menu d-flex flex-wrap justify-content-between gap-4\">\r\n                      <a \r\n                        v-for=\"app in apps\" \r\n                        :key=\"app.name\"\r\n                        :href=\"app.url\" \r\n                        target=\"_blank\" \r\n                        class=\"dropdown-item p-0 text-center\"\r\n                      >\r\n                        <img :src=\"getImageUrl(app.icon)\" class=\"wh-25\" :alt=\"app.name\">\r\n                        <span>{{ app.name }}</span>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Right Header Content -->\r\n        <div class=\"col-lg-8 col-sm-6\">\r\n          <div class=\"right-header-content mt-2 mt-sm-0\">\r\n            <ul class=\"d-flex align-items-center justify-content-center justify-content-sm-end ps-0 mb-0 list-unstyled\">\r\n              <!-- Dark/Light Mode Toggle -->\r\n              <li class=\"header-right-item\">\r\n                <div class=\"light-dark\">\r\n                  <button \r\n                    class=\"switch-toggle settings-btn dark-btn p-0 bg-transparent border-0\" \r\n                    @click=\"toggleDarkMode\"\r\n                  >\r\n                    <span class=\"dark\" v-if=\"darkMode\">\r\n                      <i class=\"material-symbols-outlined\">light_mode</i>\r\n                    </span> \r\n                    <span class=\"light\" v-else>\r\n                      <i class=\"material-symbols-outlined\">dark_mode</i>\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </li>\r\n              \r\n              <!-- Language Selector -->\r\n              <li class=\"header-right-item\">\r\n                <div class=\"dropdown notifications language\">\r\n                  <button \r\n                    class=\"btn btn-secondary dropdown-toggle border-0 p-0 position-relative\" \r\n                    type=\"button\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <span class=\"material-symbols-outlined\">translate</span>\r\n                  </button>\r\n                  <div class=\"dropdown-menu dropdown-lg p-0 border-0 dropdown-menu-end\">\r\n                    <span class=\"fw-semibold fs-15 text-secondary title\">Choose Language</span>\r\n                    <div class=\"max-h-275\" data-simplebar>\r\n                      <div \r\n                        class=\"notification-menu\" \r\n                        v-for=\"language in languages\" \r\n                        :key=\"language.name\"\r\n                      >\r\n                        <a href=\"javascript:void(0);\" class=\"dropdown-item\" @click=\"changeLanguage(language.code)\">\r\n                          <div class=\"d-flex align-items-center\">\r\n                            <div class=\"flex-shrink-0\">\r\n                              <img :src=\"getImageUrl(language.flag)\" class=\"wh-30 rounded-circle\" :alt=\"language.name\">\r\n                            </div>\r\n                            <div class=\"flex-grow-1 ms-2\">\r\n                              <span class=\"text-secondary fw-medium fs-14\">{{ language.name }}</span>\r\n                            </div>\r\n                          </div>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              \r\n              <!-- Fullscreen Toggle -->\r\n              <li class=\"header-right-item\">\r\n                <button \r\n                  class=\"fullscreen-btn bg-transparent p-0 border-0\" \r\n                  @click=\"toggleFullscreen\"\r\n                >\r\n                  <i class=\"material-symbols-outlined text-body\">fullscreen</i>\r\n                </button>\r\n              </li>\r\n              \r\n              <!-- Notifications -->\r\n              <li class=\"header-right-item\">\r\n                <div class=\"dropdown notifications noti\">\r\n                  <button \r\n                    class=\"btn btn-secondary border-0 p-0 position-relative badge\" \r\n                    type=\"button\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <span class=\"material-symbols-outlined\">notifications</span>\r\n                    <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" v-if=\"unreadNotifications > 0\">\r\n                      {{ unreadNotifications }}\r\n                    </span>\r\n                  </button>\r\n                  <div class=\"dropdown-menu dropdown-lg p-0 border-0 p-0 dropdown-menu-end\">\r\n                    <div class=\"d-flex justify-content-between align-items-center title\">\r\n                      <span class=\"fw-semibold fs-15 text-secondary\">\r\n                        Notifications <span class=\"fw-normal text-body fs-14\">({{ notifications.length }})</span>\r\n                      </span>\r\n                      <button \r\n                        class=\"p-0 m-0 bg-transparent border-0 fs-14 text-primary\"\r\n                        @click=\"clearNotifications\"\r\n                      >\r\n                        Clear All\r\n                      </button>\r\n                    </div> \r\n  \r\n                    <div class=\"max-h-217\" data-simplebar>\r\n                      <div \r\n                        class=\"notification-menu\" \r\n                        :class=\"{ 'unseen': !notification.seen }\"\r\n                        v-for=\"notification in notifications\"\r\n                        :key=\"notification.id\"\r\n                      >\r\n                        <a href=\"#\" class=\"dropdown-item\" @click.prevent=\"handleNotificationClick(notification)\">\r\n                          <div class=\"d-flex align-items-center\">\r\n                            <div class=\"flex-shrink-0\">\r\n                              <i class=\"material-symbols-outlined\" :class=\"`text-${notification.type}`\">\r\n                                {{ notification.icon }}\r\n                              </i>\r\n                            </div>\r\n                            <div class=\"flex-grow-1 ms-3\">\r\n                              <p v-html=\"notification.message\"></p>\r\n                              <span class=\"fs-13\">{{ formatTime(notification.time) }}</span>\r\n                            </div>\r\n                          </div>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n  \r\n                    <a \r\n                      href=\"#\" \r\n                      class=\"dropdown-item text-center text-primary d-block view-all fw-medium rounded-bottom-3\"\r\n                      @click.prevent=\"viewAllNotifications\"\r\n                    >\r\n                      <span>See All Notifications</span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              \r\n              <!-- User Profile Dropdown -->\r\n              <li class=\"header-right-item\">\r\n                <div class=\"dropdown admin-profile\">\r\n                  <div \r\n                    class=\"d-xxl-flex align-items-center bg-transparent border-0 text-start p-0 cursor dropdown-toggle\" \r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    <div class=\"flex-shrink-0\">\r\n                      <img \r\n                        class=\"rounded-circle wh-40 administrator\" \r\n                        :src=\"getImageUrl(user.avatar)\" \r\n                        :alt=\"user.name\"\r\n                      >\r\n                    </div>\r\n                    <div class=\"flex-grow-1 ms-2\">\r\n                      <div class=\"d-flex align-items-center justify-content-between\">\r\n                        <div class=\"d-none d-xxl-block\">\r\n                          <div class=\"d-flex align-content-center\">\r\n                            <h3>{{ user.name }}</h3>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n      \r\n                  <div class=\"dropdown-menu border-0 bg-white dropdown-menu-end\">\r\n                    <div class=\"d-flex align-items-center info\">\r\n                      <div class=\"flex-shrink-0\">\r\n                        <img \r\n                          class=\"rounded-circle wh-30 administrator\" \r\n                          :src=\"getImageUrl(user.avatar)\" \r\n                          :alt=\"user.name\"\r\n                        >\r\n                      </div>\r\n                      <div class=\"flex-grow-1 ms-2\">\r\n                        <h3 class=\"fw-medium\">{{ user.fullName }}</h3>\r\n                        <span class=\"fs-12\">{{ user.role }}</span>\r\n                      </div>\r\n                    </div>\r\n                    <ul class=\"admin-link ps-0 mb-0 list-unstyled\">\r\n                      <li v-for=\"item in profileMenu\" :key=\"item.text\">\r\n                        <router-link \r\n                          :to=\"item.route\" \r\n                          class=\"dropdown-item admin-item-link d-flex align-items-center text-body\"\r\n                        >\r\n                          <i class=\"material-symbols-outlined\">{{ item.icon }}</i>\r\n                          <span class=\"ms-2\">{{ item.text }}</span>\r\n                        </router-link>\r\n                      </li>\r\n                    </ul>\r\n                    <ul class=\"admin-link ps-0 mb-0 list-unstyled\">\r\n                      <li>\r\n                        <a \r\n                          class=\"dropdown-item admin-item-link d-flex align-items-center text-body\" \r\n                          href=\"#\" \r\n                          @click.prevent=\"logout\"\r\n                        >\r\n                          <i class=\"material-symbols-outlined\">logout</i>\r\n                          <span class=\"ms-2\">Logout</span>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              \r\n              <!-- Theme Settings -->\r\n              <li class=\"header-right-item\">\r\n                <button \r\n                  class=\"theme-settings-btn p-0 border-0 bg-transparent\" \r\n                  type=\"button\" \r\n                  data-bs-toggle=\"offcanvas\" \r\n                  data-bs-target=\"#offcanvasScrolling\" \r\n                  aria-controls=\"offcanvasScrolling\"\r\n                >\r\n                  <i \r\n                    class=\"material-symbols-outlined\" \r\n                    data-bs-toggle=\"tooltip\" \r\n                    data-bs-placement=\"left\" \r\n                    :data-bs-title=\"themeSettingsTooltip\"\r\n                  >\r\n                    settings\r\n                  </i>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Tooltip } from 'bootstrap';\r\n  export default {\r\n    name: 'HeaderComponent',\r\n    data() {\r\n      return {\r\n        searchQuery: '',\r\n        darkMode: false,\r\n        unreadNotifications: 3,\r\n        apps: [\r\n          { name: 'Figma', url: 'https://www.figma.com/', icon: 'figma.svg' },\r\n          { name: 'Dribbble', url: 'https://www.dribbble.com/', icon: 'dribbble.svg' },\r\n          { name: 'Spotify', url: 'https://www.spotify.com/', icon: 'spotify.svg' },\r\n          { name: 'Github', url: 'https://www.github.com/', icon: 'github.svg' },\r\n          { name: 'GDrive', url: 'https://www.google.com/drive/', icon: 'gdrive.svg' },\r\n          { name: 'Trello', url: 'https://www.trello.com/', icon: 'trello.svg' },\r\n          { name: 'Slack', url: 'https://www.slack.com/', icon: 'slak.svg' },\r\n          { name: 'Pinterest', url: 'https://www.pinterest.com/', icon: 'pinterest.svg' },\r\n          { name: 'Facebook', url: 'https://www.facebook.com/', icon: 'facebook.svg' },\r\n          { name: 'Linkedin', url: 'https://www.linkedin.com/', icon: 'linkedin.svg' }\r\n        ],\r\n        languages: [\r\n          { name: 'English', code: 'en', flag: 'usa.svg' },\r\n          { name: 'Canada', code: 'ca', flag: 'canada.svg' },\r\n          { name: 'Germany', code: 'de', flag: 'germany.svg' },\r\n          { name: 'Portugal', code: 'pt', flag: 'portugal.svg' },\r\n          { name: 'Spain', code: 'es', flag: 'spain.svg' }\r\n        ],\r\n        notifications: [\r\n          { \r\n            id: 1, \r\n            message: 'You have requested to <span class=\"fw-semibold\">withdrawal</span>', \r\n            icon: 'sms', \r\n            type: 'primary', \r\n            time: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\r\n            seen: true \r\n          },\r\n          { \r\n            id: 2, \r\n            message: 'A new user added in Trezo', \r\n            icon: 'person', \r\n            type: 'info', \r\n            time: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 hours ago\r\n            seen: false \r\n          },\r\n          { \r\n            id: 3, \r\n            message: 'You have requested to <span class=\"fw-semibold\">withdrawal</span>', \r\n            icon: 'mark_email_unread', \r\n            type: 'success', \r\n            time: new Date(Date.now() - 24 * 60 * 60 * 1000), // 1 day ago\r\n            seen: true \r\n          }\r\n        ],\r\n        user: {\r\n          name: 'Olivia',\r\n          fullName: 'Olivia John',\r\n          role: 'Marketing Manager',\r\n          avatar: 'administrator.jpg'\r\n        },\r\n        profileMenu: [\r\n          { icon: 'account_circle', text: 'My Profile', route: '/profile' },\r\n          { icon: 'chat', text: 'Messages', route: '/chat' },\r\n          { icon: 'format_list_bulleted', text: 'My Task', route: '/tasks' },\r\n          { icon: 'credit_card', text: 'Billing', route: '/billing' },\r\n          { icon: 'settings', text: 'Settings', route: '/settings' },\r\n          { icon: 'support', text: 'Support', route: '/support' },\r\n          { icon: 'lock', text: 'Lock Screen', route: '/lock-screen' }\r\n        ],\r\n        themeSettingsTooltip: 'Click On Theme Settings'\r\n      }\r\n    },\r\n    methods: {\r\n      getImageUrl(imageName) {\r\n        // This assumes your images are in the assets/images directory\r\n        return `/assets/images/${imageName}`;\r\n        // return imageName\r\n      },\r\n      toggleSidebar() {\r\n        console.log(\"toggle side bar \")\r\n        this.$emit('toggle-sidebar');\r\n      },\r\n      handleSearch() {\r\n        if (this.searchQuery.trim()) {\r\n          this.$emit('search', this.searchQuery);\r\n        }\r\n      },\r\n      toggleDarkMode() {\r\n        this.darkMode = !this.darkMode;\r\n        document.body.classList.toggle('dark-mode', this.darkMode);\r\n        localStorage.setItem('darkMode', this.darkMode);\r\n      },\r\n      changeLanguage(langCode) {\r\n        this.$i18n.locale = langCode;\r\n        localStorage.setItem('language', langCode);\r\n      },\r\n      toggleFullscreen() {\r\n        if (!document.fullscreenElement) {\r\n          document.documentElement.requestFullscreen().catch(err => {\r\n            console.error(`Error attempting to enable fullscreen: ${err.message}`);\r\n          });\r\n        } else {\r\n          if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n          }\r\n        }\r\n      },\r\n      handleNotificationClick(notification) {\r\n        if (!notification.seen) {\r\n          notification.seen = true;\r\n          this.unreadNotifications--;\r\n        }\r\n        // Handle navigation to notification target\r\n        this.$emit('notification-click', notification);\r\n      },\r\n      clearNotifications() {\r\n        this.notifications.forEach(n => n.seen = true);\r\n        this.unreadNotifications = 0;\r\n      },\r\n      viewAllNotifications() {\r\n        this.$router.push('/notifications');\r\n      },\r\n      logout() {\r\n        // Implement logout logic\r\n        this.$emit('logout');\r\n      },\r\n      formatTime(date) {\r\n        const now = new Date();\r\n        const diff = now - date;\r\n        \r\n        const minute = 60 * 1000;\r\n        const hour = 60 * minute;\r\n        const day = 24 * hour;\r\n        \r\n        if (diff < minute) {\r\n          return 'Just now';\r\n        } else if (diff < hour) {\r\n          const minutes = Math.floor(diff / minute);\r\n          return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\r\n        } else if (diff < day) {\r\n          const hours = Math.floor(diff / hour);\r\n          return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n        } else {\r\n          const days = Math.floor(diff / day);\r\n          return `${days} day${days > 1 ? 's' : ''} ago`;\r\n        }\r\n      },\r\n      initializeDarkMode() {\r\n      // Check for saved preference or system preference\r\n      const savedMode = localStorage.getItem('darkMode');\r\n      \r\n      if (savedMode !== null) {\r\n        this.darkMode = savedMode === 'true';\r\n      } else {\r\n        // Fallback to system preference if no saved setting\r\n        this.darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      }\r\n      \r\n      // Apply the mode\r\n      this.applyDarkMode(this.darkMode);\r\n    },\r\n\r\n    applyDarkMode(isDark) {\r\n      if (isDark) {\r\n        document.body.classList.add('dark-mode');\r\n      } else {\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n    },\r\n\r\n    initializeTooltips() {\r\n      try {\r\n        const tooltipElements = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\r\n        \r\n        Array.from(tooltipElements).forEach(element => {\r\n          new Tooltip(element, {\r\n            trigger: 'hover focus', // Show on hover or focus\r\n            placement: 'left',     // Default placement\r\n            // You can add more options here as needed\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error('Error initializing tooltips:', error);\r\n      }\r\n    }\r\n    },\r\n    // mounted() {\r\n    //   // Initialize dark mode from localStorage\r\n    //   this.darkMode = localStorage.getItem('darkMode') === 'true';\r\n    //   if (this.darkMode) {\r\n    //     document.body.classList.add('dark-mode');\r\n    //   }\r\n      \r\n    //   // Initialize tooltips\r\n    //   const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\r\n    //   tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n    //     return new bootstrap.Tooltip(tooltipTriggerEl);\r\n    //   });\r\n    // }\r\n    mounted() {\r\n    this.initializeDarkMode();\r\n    this.initializeTooltips();\r\n  },\r\n//   methods: {\r\n//     initializeDarkMode() {\r\n//       // Check for saved preference or system preference\r\n//       const savedMode = localStorage.getItem('darkMode');\r\n      \r\n//       if (savedMode !== null) {\r\n//         this.darkMode = savedMode === 'true';\r\n//       } else {\r\n//         // Fallback to system preference if no saved setting\r\n//         this.darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//       }\r\n      \r\n//       // Apply the mode\r\n//       this.applyDarkMode(this.darkMode);\r\n//     },\r\n\r\n//     applyDarkMode(isDark) {\r\n//       if (isDark) {\r\n//         document.body.classList.add('dark-mode');\r\n//       } else {\r\n//         document.body.classList.remove('dark-mode');\r\n//       }\r\n//     },\r\n\r\n//     initializeTooltips() {\r\n//       try {\r\n//         const tooltipElements = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\r\n        \r\n//         Array.from(tooltipElements).forEach(element => {\r\n//           new Tooltip(element, {\r\n//             trigger: 'hover focus', // Show on hover or focus\r\n//             placement: 'left',     // Default placement\r\n//             // You can add more options here as needed\r\n//           });\r\n//         });\r\n//       } catch (error) {\r\n//         console.error('Error initializing tooltips:', error);\r\n//       }\r\n//     }\r\n//   }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any component-specific styles here */\r\n  .header-area {\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n  }\r\n  \r\n  .dark-mode .header-area {\r\n    background-color: #1e1e2d;\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .notification-menu.unseen {\r\n    background-color: rgba(13, 110, 253, 0.05);\r\n  }\r\n  \r\n  .dropdown-menu {\r\n    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1);\r\n    border: none;\r\n  }\r\n  \r\n  .admin-profile .dropdown-menu {\r\n    min-width: 240px;\r\n  }\r\n  \r\n  .theme-settings-btn i {\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .theme-settings-btn:hover i {\r\n    transform: rotate(45deg);\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}