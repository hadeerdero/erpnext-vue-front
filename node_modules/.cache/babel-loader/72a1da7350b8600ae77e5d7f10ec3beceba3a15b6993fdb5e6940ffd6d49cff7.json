{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n// import { createRouter, createWebHistory } from \"vue-router\";\n// import HomeView from \"@/views/HomeView.vue\";\n// import RegisterView from \"@/views/auth/RegisterView.vue\";\n// import LoginView from \"@/views/auth/LoginView.vue\"; // Import your login component\n// import store from \"@/store\"; // Import your Vuex store\n// import DonationView from \"@/views/DonationView.vue\"\n\n// const routes = [\n//   {\n//     path: \"/\",\n//     name: \"home\",\n//     component: HomeView,\n//     meta: {\n//       requiresAuth: false \n//     }\n//   },\n//   {\n//     path: \"/about\",\n//     name: \"about\",\n//     component: () => import(\"../views/AboutView.vue\"),\n//     meta: {\n//       requiresAuth: false \n//     }\n//   },\n//   // {\n//   //   path: \"/sign-up\",\n//   //   name: \"register\",\n//   //   component: RegisterView,\n//   //   meta: {\n//   //     requiresAuth: false, \n//   //     requiresGuest: true \n//   //   }\n//   // },\n//   {\n//     path: \"/donation-request\",\n//     name: \"donation-request\",\n//     component: DonationView,\n//     meta: {\n//       meta: { requiresAuth: true, roles: ['donor'] }\n\n//     }\n//   },\n//   {\n//     path: \"/sign-up\",\n//     name: \"register\",\n//     component: RegisterView,\n//     meta: {\n//       requiresAuth: false, \n//       requiresGuest: true \n//     }\n//   },\n//   {\n//     path: \"/login\",\n//     name: \"login\",\n//     component: LoginView,\n//     meta: {\n//       requiresAuth: false, \n//       requiresGuest: true \n//     }\n//   },\n\n//   // Add a catch-all route for 404 pages\n//   {\n//     path: \"/:pathMatch(.*)*\",\n//     name: \"not-found\",\n//     component: () => import(\"@/views/NotFoundView.vue\"),\n//     meta: {\n//       requiresAuth: false\n//     }\n//   }\n// ];\n\n// const router = createRouter({\n//   history: createWebHistory(process.env.BASE_URL),\n//   routes,\n// });\n\n// router.beforeEach((to, from, next) => {\n//   if (to.matched.some(record => record.meta.requiresAuth)) {\n//       if (!store.getters['auth/isAuthenticated']) {\n//           next({\n//               path: '/login',\n//               query: { redirect: to.fullPath }\n//           });\n//       } else {\n//           if (to.meta.roles) {\n//               const userRole = store.getters['auth/userRole'];\n//               if (to.meta.roles.includes(userRole)) {\n//                   next();\n//               } else {\n//                   next({ path: '/unauthorized' }); \n//               }\n//           } else {\n//               next();\n//           }\n//       }\n//   } else {\n//       next();\n//   }\n// });\n// export default router;\n\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HomeView from \"@/views/HomeView.vue\";\nimport RegisterView from \"@/views/auth/RegisterView.vue\";\nimport LoginView from \"@/views/auth/LoginView.vue\";\nimport store from \"@/store\";\nimport DonationView from \"@/views/DonationView.vue\";\n// import DonationRequestsManagementView from \"@/views/stock/DonationRequestsManagementView\"\n\nconst routes = [{\n  path: \"/\",\n  name: \"home\",\n  component: HomeView,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/about\",\n  name: \"about\",\n  component: () => import(\"../views/AboutView.vue\"),\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/donation-request\",\n  name: \"donation-request\",\n  component: DonationView,\n  meta: {\n    requiresAuth: true,\n    roles: ['donor'] // Fixed duplicate meta property\n  }\n},\n// {\n//   path: \"/bloodbank/requests\",\n//   name: \"bloodbank-requests\",\n//   component: () => import(\"@/views/stock/DonationRequestsManagementView\"),\n//   meta: {\n//     requiresAuth: true,\n//     roles: ['bloodBank'] // Only bloodBank role can access\n//   }\n// },\n{\n  path: \"/bloodbank-requests\",\n  name: \"bloodbank-requests\",\n  component: () => import(\"@/views/stock/DonationRequestsManagementView\"),\n  meta: {\n    requiresAuth: true,\n    roles: ['bloodBank']\n  }\n}, {\n  path: \"/sign-up\",\n  name: \"register\",\n  component: RegisterView,\n  meta: {\n    requiresAuth: false,\n    requiresGuest: true\n  }\n}, {\n  path: \"/login\",\n  name: \"login\",\n  component: LoginView,\n  meta: {\n    requiresAuth: false,\n    requiresGuest: true\n  }\n},\n// Add a catch-all route for 404 pages\n{\n  path: \"/:pathMatch(.*)*\",\n  name: \"not-found\",\n  component: () => import(\"@/views/NotFoundView.vue\"),\n  meta: {\n    requiresAuth: false\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  console.log('Current role:', store.getters['auth/userRole']);\n  // Check if route requires guest access (like login/register)\n  if (to.matched.some(record => record.meta.requiresGuest)) {\n    if (store.getters['auth/isAuthenticated']) {\n      // If logged in, redirect to home\n      next({\n        path: '/'\n      });\n      return;\n    }\n  }\n\n  // Check if route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters['auth/isAuthenticated']) {\n      // Not authenticated, redirect to login with return url\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      return;\n    }\n\n    // Check if route has role requirements\n    if (to.meta.roles) {\n      const userRole = store.getters['auth/userRole'];\n      if (!to.meta.roles.includes(userRole)) {\n        // User doesn't have required role\n        next({\n          path: '/unauthorized'\n        });\n        return;\n      }\n    }\n  }\n\n  // Proceed to route\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","RegisterView","LoginView","store","DonationView","routes","path","name","component","meta","requiresAuth","roles","requiresGuest","router","history","process","env","BASE_URL","beforeEach","to","from","next","console","log","getters","matched","some","record","query","redirect","fullPath","userRole","includes"],"sources":["C:/Users/ALEX/Desktop/hadeerwork/blood_bank_system/erpnext-vue-front/src/router/index.js"],"sourcesContent":["// import { createRouter, createWebHistory } from \"vue-router\";\n// import HomeView from \"@/views/HomeView.vue\";\n// import RegisterView from \"@/views/auth/RegisterView.vue\";\n// import LoginView from \"@/views/auth/LoginView.vue\"; // Import your login component\n// import store from \"@/store\"; // Import your Vuex store\n// import DonationView from \"@/views/DonationView.vue\"\n\n// const routes = [\n//   {\n//     path: \"/\",\n//     name: \"home\",\n//     component: HomeView,\n//     meta: {\n//       requiresAuth: false \n//     }\n//   },\n//   {\n//     path: \"/about\",\n//     name: \"about\",\n//     component: () => import(\"../views/AboutView.vue\"),\n//     meta: {\n//       requiresAuth: false \n//     }\n//   },\n//   // {\n//   //   path: \"/sign-up\",\n//   //   name: \"register\",\n//   //   component: RegisterView,\n//   //   meta: {\n//   //     requiresAuth: false, \n//   //     requiresGuest: true \n//   //   }\n//   // },\n//   {\n//     path: \"/donation-request\",\n//     name: \"donation-request\",\n//     component: DonationView,\n//     meta: {\n//       meta: { requiresAuth: true, roles: ['donor'] }\n      \n//     }\n//   },\n//   {\n//     path: \"/sign-up\",\n//     name: \"register\",\n//     component: RegisterView,\n//     meta: {\n//       requiresAuth: false, \n//       requiresGuest: true \n//     }\n//   },\n//   {\n//     path: \"/login\",\n//     name: \"login\",\n//     component: LoginView,\n//     meta: {\n//       requiresAuth: false, \n//       requiresGuest: true \n//     }\n//   },\n \n//   // Add a catch-all route for 404 pages\n//   {\n//     path: \"/:pathMatch(.*)*\",\n//     name: \"not-found\",\n//     component: () => import(\"@/views/NotFoundView.vue\"),\n//     meta: {\n//       requiresAuth: false\n//     }\n//   }\n// ];\n\n// const router = createRouter({\n//   history: createWebHistory(process.env.BASE_URL),\n//   routes,\n// });\n\n// router.beforeEach((to, from, next) => {\n//   if (to.matched.some(record => record.meta.requiresAuth)) {\n//       if (!store.getters['auth/isAuthenticated']) {\n//           next({\n//               path: '/login',\n//               query: { redirect: to.fullPath }\n//           });\n//       } else {\n//           if (to.meta.roles) {\n//               const userRole = store.getters['auth/userRole'];\n//               if (to.meta.roles.includes(userRole)) {\n//                   next();\n//               } else {\n//                   next({ path: '/unauthorized' }); \n//               }\n//           } else {\n//               next();\n//           }\n//       }\n//   } else {\n//       next();\n//   }\n// });\n// export default router;\n\n\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HomeView from \"@/views/HomeView.vue\";\nimport RegisterView from \"@/views/auth/RegisterView.vue\";\nimport LoginView from \"@/views/auth/LoginView.vue\";\nimport store from \"@/store\";\nimport DonationView from \"@/views/DonationView.vue\";\n// import DonationRequestsManagementView from \"@/views/stock/DonationRequestsManagementView\"\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: HomeView,\n    meta: {\n      requiresAuth: false \n    }\n  },\n  {\n    path: \"/about\",\n    name: \"about\",\n    component: () => import(\"../views/AboutView.vue\"),\n    meta: {\n      requiresAuth: false \n    }\n  },\n  {\n    path: \"/donation-request\",\n    name: \"donation-request\",\n    component: DonationView,\n    meta: {\n      requiresAuth: true,\n      roles: ['donor'] // Fixed duplicate meta property\n    }\n  },\n  // {\n  //   path: \"/bloodbank/requests\",\n  //   name: \"bloodbank-requests\",\n  //   component: () => import(\"@/views/stock/DonationRequestsManagementView\"),\n  //   meta: {\n  //     requiresAuth: true,\n  //     roles: ['bloodBank'] // Only bloodBank role can access\n  //   }\n  // },\n  {\n    path: \"/bloodbank-requests\",\n    name: \"bloodbank-requests\",\n    component: () => import(\"@/views/stock/DonationRequestsManagementView\"),\n    meta: {\n      requiresAuth: true,\n      roles: ['bloodBank']\n    }\n  },\n  {\n    path: \"/sign-up\",\n    name: \"register\",\n    component: RegisterView,\n    meta: {\n      requiresAuth: false,\n      requiresGuest: true \n    }\n  },\n  {\n    path: \"/login\",\n    name: \"login\",\n    component: LoginView,\n    meta: {\n      requiresAuth: false,\n      requiresGuest: true \n    }\n  },\n \n  // Add a catch-all route for 404 pages\n  {\n    path: \"/:pathMatch(.*)*\",\n    name: \"not-found\",\n    component: () => import(\"@/views/NotFoundView.vue\"),\n    meta: {\n      requiresAuth: false\n    }\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  console.log('Current role:', store.getters['auth/userRole']);\n  // Check if route requires guest access (like login/register)\n  if (to.matched.some(record => record.meta.requiresGuest)) {\n    if (store.getters['auth/isAuthenticated']) {\n      // If logged in, redirect to home\n      next({ path: '/' });\n      return;\n    }\n  }\n\n  // Check if route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters['auth/isAuthenticated']) {\n      // Not authenticated, redirect to login with return url\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      });\n      return;\n    }\n\n    // Check if route has role requirements\n    if (to.meta.roles) {\n      const userRole = store.getters['auth/userRole'];\n      if (!to.meta.roles.includes(userRole)) {\n        // User doesn't have required role\n        next({ path: '/unauthorized' });\n        return;\n      }\n    }\n  }\n\n  // Proceed to route\n  next();\n});\n\nexport default router;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,0BAA0B;AACnD;;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER,QAAQ;EACnBS,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDC,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEJ,YAAY;EACvBK,IAAI,EAAE;IACJC,YAAY,EAAE,IAAI;IAClBC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;EACnB;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEL,IAAI,EAAE,qBAAqB;EAC3BC,IAAI,EAAE,oBAAoB;EAC1BC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,8CAA8C,CAAC;EACvEC,IAAI,EAAE;IACJC,YAAY,EAAE,IAAI;IAClBC,KAAK,EAAE,CAAC,WAAW;EACrB;AACF,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP,YAAY;EACvBQ,IAAI,EAAE;IACJC,YAAY,EAAE,KAAK;IACnBE,aAAa,EAAE;EACjB;AACF,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IACJC,YAAY,EAAE,KAAK;IACnBE,aAAa,EAAE;EACjB;AACF,CAAC;AAED;AACA;EACEN,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC;EACnDC,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,CACF;AAED,MAAMG,MAAM,GAAGf,YAAY,CAAC;EAC1BgB,OAAO,EAAEf,gBAAgB,CAACgB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CZ;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEpB,KAAK,CAACqB,OAAO,CAAC,eAAe,CAAC,CAAC;EAC5D;EACA,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAClB,IAAI,CAACG,aAAa,CAAC,EAAE;IACxD,IAAIT,KAAK,CAACqB,OAAO,CAAC,sBAAsB,CAAC,EAAE;MACzC;MACAH,IAAI,CAAC;QAAEf,IAAI,EAAE;MAAI,CAAC,CAAC;MACnB;IACF;EACF;;EAEA;EACA,IAAIa,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAClB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACP,KAAK,CAACqB,OAAO,CAAC,sBAAsB,CAAC,EAAE;MAC1C;MACAH,IAAI,CAAC;QACHf,IAAI,EAAE,QAAQ;QACdsB,KAAK,EAAE;UAAEC,QAAQ,EAAEV,EAAE,CAACW;QAAS;MACjC,CAAC,CAAC;MACF;IACF;;IAEA;IACA,IAAIX,EAAE,CAACV,IAAI,CAACE,KAAK,EAAE;MACjB,MAAMoB,QAAQ,GAAG5B,KAAK,CAACqB,OAAO,CAAC,eAAe,CAAC;MAC/C,IAAI,CAACL,EAAE,CAACV,IAAI,CAACE,KAAK,CAACqB,QAAQ,CAACD,QAAQ,CAAC,EAAE;QACrC;QACAV,IAAI,CAAC;UAAEf,IAAI,EAAE;QAAgB,CAAC,CAAC;QAC/B;MACF;IACF;EACF;;EAEA;EACAe,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}