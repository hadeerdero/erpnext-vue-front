{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Preloader from \"@/components/global/PreloaderComponent.vue\";\nimport ThemeSettings from \"@/components/layout/ThemeSettings.vue\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"LoginView\",\n  components: {\n    Preloader,\n    ThemeSettings\n  },\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapGetters(\"auth\", [\"homePage\", \"isAuthenticated\"])\n  },\n  methods: {\n    ...mapActions(\"auth\", [\"login\"]),\n    async handleSubmit() {\n      this.loading = true;\n      this.error = null;\n      try {\n        // Call login action with credentials\n        await this.login({\n          email: this.form.email,\n          password: this.form.password\n        });\n\n        // Redirect to dashboard after successful login\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error(\"Login error:\", error);\n        this.error = this.getEnhancedErrorMessage(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    getEnhancedErrorMessage(error) {\n      // Handle network errors\n      if (!error.response) {\n        return \"Network error. Please check your connection.\";\n      }\n\n      // Handle ERPNext specific error responses\n      const {\n        status,\n        data\n      } = error.response;\n\n      // Handle 500 errors specifically\n      if (status === 500) {\n        return \"Server is temporarily unavailable. Please try again later.\";\n      }\n\n      // Parse ERPNext error messages\n      if (data && data.message) {\n        const message = typeof data.message === 'string' ? data.message : data.message.error || data.message.message;\n        if (message) {\n          if (message.includes(\"Incorrect password\") || message.includes(\"User disabled or missing\") || message.includes(\"No user found\")) {\n            return \"Invalid email or password\";\n          }\n          return message;\n        }\n      }\n\n      // Standard HTTP error messages\n      switch (status) {\n        case 401:\n          return \"Invalid email or password\";\n        case 403:\n          return \"Access denied\";\n        case 404:\n          return \"Service not found\";\n        case 429:\n          return \"Too many requests. Please wait and try again.\";\n        default:\n          return \"Login failed. Please try again.\";\n      }\n    }\n  },\n  mounted() {\n    // If already authenticated, redirect to home\n    if (this.isAuthenticated) {\n      this.$router.push(this.homePage || '/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["Preloader","ThemeSettings","mapActions","mapGetters","name","components","data","form","email","password","loading","error","computed","methods","handleSubmit","login","$router","push","console","getEnhancedErrorMessage","response","status","message","includes","mounted","isAuthenticated","homePage"],"sources":["D:\\hadeerwork\\erpnext-vue-front\\src\\views\\auth\\LoginView.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"boxed-size bg-white\">\r\n    <Preloader />\r\n    <div class=\"container justify-content-start\">\r\n      <div class=\"main-content d-flex flex-column p-0\">\r\n        <div class=\"m-auto m-1230\">\r\n          <div class=\"row align-items-center\">\r\n            <div class=\"col-lg-6 d-none d-lg-block\">\r\n              <img\r\n                src=\"@/assets/intlaq-logo.jpg\"\r\n                class=\"rounded-3\"\r\n                alt=\"login\"\r\n              />\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"mw-480 ms-lg-auto\">\r\n                <div class=\"d-inline-block mb-4\">\r\n                \r\n                </div>\r\n                <h3 class=\"fs-28 mb-2\">Welcome back to Intlaq!</h3>\r\n                <form @submit.prevent=\"handleSubmit\">\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Email Address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      v-model=\"form.email\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"example@trezo.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      v-model=\"form.password\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"Type password\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <a\r\n                      href=\"forget-password.html\"\r\n                      class=\"text-decoration-none text-primary fw-semibold\"\r\n                      >Forgot Password?</a\r\n                    >\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary fw-medium py-2 px-3 w-100\"\r\n                      :disabled=\"loading\"\r\n                    >\r\n                      <div\r\n                        class=\"d-flex align-items-center justify-content-center py-1\"\r\n                      >\r\n                        <i\r\n                          class=\"material-symbols-outlined text-white fs-20 me-2\"\r\n                          >login</i\r\n                        >\r\n                        <span v-if=\"!loading\">Login</span>\r\n                        <span v-else>Logging in...</span>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                  <div v-if=\"error\" class=\"alert alert-danger mb-4\">\r\n                    {{ error }}\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <p>\r\n                      Don't have an account.\r\n                      <a\r\n                        href=\"register.html\"\r\n                        class=\"fw-medium text-primary text-decoration-none\"\r\n                        >Register</a\r\n                      >\r\n                    </p>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ThemeSettings />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Preloader from \"@/components/global/PreloaderComponent.vue\";\r\nimport ThemeSettings from \"@/components/layout/ThemeSettings.vue\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"LoginView\",\r\n  components: {\r\n    Preloader,\r\n    ThemeSettings,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(\"auth\", [\"login\"]),\r\n\r\n   \r\n    async handleSubmit() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        await this.login(this.form);\r\n\r\n      \r\n         this.$router.push('/dashboard');\r\n      } catch (error) {\r\n        this.error =\r\n          error.response?.data?.message?.error ||\r\n          error.response?.data?.message ||\r\n          \"Login failed. Please try again.\";\r\n        console.error(\"Login error:\", error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script> -->\r\n\r\n<!-- <template>\r\n  <div class=\"boxed-size bg-white\">\r\n    <Preloader />\r\n    <div class=\"container justify-content-start\">\r\n      <div class=\"main-content d-flex flex-column p-0\">\r\n        <div class=\"m-auto m-1230\">\r\n          <div class=\"row align-items-center\">\r\n            <div class=\"col-lg-6 d-none d-lg-block\">\r\n              <img\r\n                src=\"@/assets/intlaq-logo.jpg\"\r\n                class=\"rounded-3\"\r\n                alt=\"login\"\r\n              />\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"mw-480 ms-lg-auto\">\r\n                <div class=\"d-inline-block mb-4\">\r\n                </div>\r\n                <h3 class=\"fs-28 mb-2\">Welcome back to Intlaq!</h3>\r\n                <form @submit.prevent=\"handleSubmit\">\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Email Address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      v-model=\"form.email\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"example@trezo.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      v-model=\"form.password\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"Type password\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <a\r\n                      href=\"forget-password.html\"\r\n                      class=\"text-decoration-none text-primary fw-semibold\"\r\n                      >Forgot Password?</a\r\n                    >\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary fw-medium py-2 px-3 w-100\"\r\n                      :disabled=\"loading\"\r\n                    >\r\n                      <div\r\n                        class=\"d-flex align-items-center justify-content-center py-1\"\r\n                      >\r\n                        <i\r\n                          class=\"material-symbols-outlined text-white fs-20 me-2\"\r\n                          >login</i\r\n                        >\r\n                        <span v-if=\"!loading\">Login</span>\r\n                        <span v-else>Logging in...</span>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                  <div v-if=\"error\" class=\"alert alert-danger mb-4\">\r\n                    {{ error }}\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <p>\r\n                      Don't have an account.\r\n                      <a\r\n                        href=\"register.html\"\r\n                        class=\"fw-medium text-primary text-decoration-none\"\r\n                        >Register</a\r\n                      >\r\n                    </p>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ThemeSettings />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Preloader from \"@/components/global/PreloaderComponent.vue\";\r\nimport ThemeSettings from \"@/components/layout/ThemeSettings.vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"LoginView\",\r\n  components: {\r\n    Preloader,\r\n    ThemeSettings,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"homePage\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(\"auth\", [\"login\", \"verifyToken\"]),\r\n\r\n    async handleSubmit() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        // Call the login action with ERPNext compatible credentials\r\n        await this.login({\r\n          email: this.form.email,\r\n          password: this.form.password\r\n        });\r\n\r\n        // Verify the token after successful login\r\n        const isVerified = await this.verifyToken();\r\n        if (!isVerified) {\r\n          throw new Error(\"Authentication verification failed\");\r\n        }\r\n\r\n        // Redirect to home page or dashboard\r\n        const redirectPath =  '/dashboard';\r\n        this.$router.push(redirectPath);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Login error:\", error);\r\n        this.error = this.getErrorMessage(error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    getErrorMessage(error) {\r\n      // Handle ERPNext specific error responses\r\n      if (error.response) {\r\n        // ERPNext often returns messages in error.response.data.message\r\n        if (error.response.data && error.response.data.message) {\r\n          if (typeof error.response.data.message === 'string') {\r\n            return error.response.data.message;\r\n          } else if (error.response.data.message.error) {\r\n            return error.response.data.message.error;\r\n          }\r\n        }\r\n        \r\n        // Standard HTTP error messages\r\n        switch (error.response.status) {\r\n          case 401:\r\n            return \"Invalid email or password\";\r\n          case 403:\r\n            return \"Access denied\";\r\n          case 500:\r\n            return \"Server error. Please try again later.\";\r\n          default:\r\n            return \"Login failed. Please try again.\";\r\n        }\r\n      } else if (error.message) {\r\n        return error.message;\r\n      }\r\n      return \"An unexpected error occurred\";\r\n    }\r\n  },\r\n  mounted() {\r\n    // Clear any existing auth data when login component mounts\r\n    this.$store.commit(\"auth/LOGOUT\");\r\n  }\r\n};\r\n</script> -->\r\n\r\n\r\n\r\n<template>\r\n  <div class=\"boxed-size bg-white\">\r\n    <Preloader />\r\n    <div class=\"container justify-content-start\">\r\n      <div class=\"main-content d-flex flex-column p-0\">\r\n        <div class=\"m-auto m-1230\">\r\n          <div class=\"row align-items-center\">\r\n            <div class=\"col-lg-6 d-none d-lg-block\">\r\n              <img\r\n                src=\"@/assets/intlaq-logo.jpg\"\r\n                class=\"rounded-3\"\r\n                alt=\"login\"\r\n              />\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"mw-480 ms-lg-auto\">\r\n                <div class=\"d-inline-block mb-4\">\r\n                </div>\r\n                <h3 class=\"fs-28 mb-2\">Welcome back to Intlaq!</h3>\r\n                <form @submit.prevent=\"handleSubmit\">\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Email Address</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      v-model=\"form.email\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"example@trezo.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <label class=\"label text-secondary\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      v-model=\"form.password\"\r\n                      class=\"form-control h-55\"\r\n                      placeholder=\"Type password\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <a\r\n                      href=\"forget-password.html\"\r\n                      class=\"text-decoration-none text-primary fw-semibold\"\r\n                      >Forgot Password?</a\r\n                    >\r\n                  </div>\r\n                  <div class=\"form-group mb-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      class=\"btn btn-primary fw-medium py-2 px-3 w-100\"\r\n                      :disabled=\"loading\"\r\n                    >\r\n                      <div\r\n                        class=\"d-flex align-items-center justify-content-center py-1\"\r\n                      >\r\n                        <i\r\n                          class=\"material-symbols-outlined text-white fs-20 me-2\"\r\n                          >login</i\r\n                        >\r\n                        <span v-if=\"!loading\">Login</span>\r\n                        <span v-else>Logging in...</span>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                  <div v-if=\"error\" class=\"alert alert-danger mb-4\">\r\n                    {{ error }}\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <p>\r\n                      Don't have an account.\r\n                      <a\r\n                        href=\"register.html\"\r\n                        class=\"fw-medium text-primary text-decoration-none\"\r\n                        >Register</a\r\n                      >\r\n                    </p>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ThemeSettings />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Preloader from \"@/components/global/PreloaderComponent.vue\";\r\nimport ThemeSettings from \"@/components/layout/ThemeSettings.vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"LoginView\",\r\n  components: {\r\n    Preloader,\r\n    ThemeSettings,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"homePage\", \"isAuthenticated\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(\"auth\", [\"login\"]),\r\n\r\n    async handleSubmit() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        // Call login action with credentials\r\n        await this.login({\r\n          email: this.form.email,\r\n          password: this.form.password\r\n        });\r\n\r\n        // Redirect to dashboard after successful login\r\n        this.$router.push('/dashboard');\r\n        \r\n      } catch (error) {\r\n        console.error(\"Login error:\", error);\r\n        this.error = this.getEnhancedErrorMessage(error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    getEnhancedErrorMessage(error) {\r\n      // Handle network errors\r\n      if (!error.response) {\r\n        return \"Network error. Please check your connection.\";\r\n      }\r\n\r\n      // Handle ERPNext specific error responses\r\n      const { status, data } = error.response;\r\n      \r\n      // Handle 500 errors specifically\r\n      if (status === 500) {\r\n        return \"Server is temporarily unavailable. Please try again later.\";\r\n      }\r\n\r\n      // Parse ERPNext error messages\r\n      if (data && data.message) {\r\n        const message = typeof data.message === 'string' \r\n          ? data.message\r\n          : data.message.error || data.message.message;\r\n        \r\n        if (message) {\r\n          if (message.includes(\"Incorrect password\") || \r\n              message.includes(\"User disabled or missing\") ||\r\n              message.includes(\"No user found\")) {\r\n            return \"Invalid email or password\";\r\n          }\r\n          return message;\r\n        }\r\n      }\r\n\r\n      // Standard HTTP error messages\r\n      switch (status) {\r\n        case 401:\r\n          return \"Invalid email or password\";\r\n        case 403:\r\n          return \"Access denied\";\r\n        case 404:\r\n          return \"Service not found\";\r\n        case 429:\r\n          return \"Too many requests. Please wait and try again.\";\r\n        default:\r\n          return \"Login failed. Please try again.\";\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // If already authenticated, redirect to home\r\n    if (this.isAuthenticated) {\r\n      this.$router.push(this.homePage || '/dashboard');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.boxed-size {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n}\r\n\r\n.m-1230 {\r\n  max-width: 1230px;\r\n  width: 100%;\r\n}\r\n\r\n.mw-480 {\r\n  max-width: 480px;\r\n}\r\n\r\n.h-55 {\r\n  height: 55px;\r\n}\r\n\r\n.alert-danger {\r\n  color: #721c24;\r\n  background-color: #f8d7da;\r\n  border-color: #f5c6cb;\r\n  padding: 0.75rem 1.25rem;\r\n  border-radius: 0.25rem;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #3b7ddd;\r\n  border-color: #3b7ddd;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #326abc;\r\n  border-color: #2f64b1;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;\r\n}\r\n</style>"],"mappings":";AA2ZA,OAAOA,SAAQ,MAAO,4CAA4C;AAClE,OAAOC,aAAY,MAAO,uCAAuC;AACjE,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVL,SAAS;IACTC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,UAAU,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,iBAAiB,CAAC;EACvD,CAAC;EACDU,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;IAEhC,MAAMY,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACJ,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MAEjB,IAAI;QACF;QACA,MAAM,IAAI,CAACI,KAAK,CAAC;UACfP,KAAK,EAAE,IAAI,CAACD,IAAI,CAACC,KAAK;UACtBC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;QACtB,CAAC,CAAC;;QAEF;QACA,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MAEjC,EAAE,OAAON,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,IAAI,CAACA,KAAI,GAAI,IAAI,CAACQ,uBAAuB,CAACR,KAAK,CAAC;MAClD,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDS,uBAAuBA,CAACR,KAAK,EAAE;MAC7B;MACA,IAAI,CAACA,KAAK,CAACS,QAAQ,EAAE;QACnB,OAAO,8CAA8C;MACvD;;MAEA;MACA,MAAM;QAAEC,MAAM;QAAEf;MAAK,IAAIK,KAAK,CAACS,QAAQ;;MAEvC;MACA,IAAIC,MAAK,KAAM,GAAG,EAAE;QAClB,OAAO,4DAA4D;MACrE;;MAEA;MACA,IAAIf,IAAG,IAAKA,IAAI,CAACgB,OAAO,EAAE;QACxB,MAAMA,OAAM,GAAI,OAAOhB,IAAI,CAACgB,OAAM,KAAM,QAAO,GAC3ChB,IAAI,CAACgB,OAAM,GACXhB,IAAI,CAACgB,OAAO,CAACX,KAAI,IAAKL,IAAI,CAACgB,OAAO,CAACA,OAAO;QAE9C,IAAIA,OAAO,EAAE;UACX,IAAIA,OAAO,CAACC,QAAQ,CAAC,oBAAoB,KACrCD,OAAO,CAACC,QAAQ,CAAC,0BAA0B,KAC3CD,OAAO,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;YACrC,OAAO,2BAA2B;UACpC;UACA,OAAOD,OAAO;QAChB;MACF;;MAEA;MACA,QAAQD,MAAM;QACZ,KAAK,GAAG;UACN,OAAO,2BAA2B;QACpC,KAAK,GAAG;UACN,OAAO,eAAe;QACxB,KAAK,GAAG;UACN,OAAO,mBAAmB;QAC5B,KAAK,GAAG;UACN,OAAO,+CAA+C;QACxD;UACE,OAAO,iCAAiC;MAC5C;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,IAAI,CAACC,eAAe,EAAE;MACxB,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,IAAI,CAACS,QAAO,IAAK,YAAY,CAAC;IAClD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}