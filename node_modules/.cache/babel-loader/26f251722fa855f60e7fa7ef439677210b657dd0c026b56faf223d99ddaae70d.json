{"ast":null,"code":"export default {\n  name: 'DashboardCard',\n  props: {\n    title: String,\n    value: [Number, String],\n    icon: String,\n    trend: Number,\n    loading: Boolean\n  },\n  computed: {\n    formattedValue() {\n      if (this.loading) return '--';\n      if (typeof this.value === 'number') return this.value.toLocaleString();\n      return this.value;\n    },\n    trendClass() {\n      if (this.trend > 0) return 'positive';\n      if (this.trend < 0) return 'negative';\n      return 'neutral';\n    },\n    trendIcon() {\n      return this.trend > 0 ? 'arrow-up' : 'arrow-down';\n    }\n  }\n};","map":{"version":3,"names":["name","props","title","String","value","Number","icon","trend","loading","Boolean","computed","formattedValue","toLocaleString","trendClass","trendIcon"],"sources":["C:\\Users\\CITCPC3\\Desktop\\hadeer\\erpnext-vue-front\\src\\components\\dashboard\\DashboardCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-card\" :class=\"{ loading }\">\r\n    <div class=\"card-icon\">\r\n      <font-awesome-icon :icon=\"icon\" />\r\n    </div>\r\n    <div class=\"card-content\">\r\n      <h3>{{ title }}</h3>\r\n      <div class=\"card-value\">{{ formattedValue }}</div>\r\n      <div class=\"card-trend\" :class=\"trendClass\">\r\n        <span v-if=\"!loading\">\r\n          <font-awesome-icon :icon=\"trendIcon\" />\r\n          {{ Math.abs(trend) }}%\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DashboardCard',\r\n  props: {\r\n    title: String,\r\n    value: [Number, String],\r\n    icon: String,\r\n    trend: Number,\r\n    loading: Boolean\r\n  },\r\n  computed: {\r\n    formattedValue() {\r\n      if (this.loading) return '--';\r\n      if (typeof this.value === 'number') return this.value.toLocaleString();\r\n      return this.value;\r\n    },\r\n    trendClass() {\r\n      if (this.trend > 0) return 'positive';\r\n      if (this.trend < 0) return 'negative';\r\n      return 'neutral';\r\n    },\r\n    trendIcon() {\r\n      return this.trend > 0 ? 'arrow-up' : 'arrow-down';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-card {\r\n  flex: 1;\r\n  min-width: 200px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.card-icon {\r\n  font-size: 24px;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background: #f0f7ff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #3a86ff;\r\n}\r\n\r\n.card-content {\r\n  flex: 1;\r\n}\r\n\r\n.card-content h3 {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.card-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.card-trend {\r\n  font-size: 12px;\r\n}\r\n\r\n.card-trend.positive {\r\n  color: #4caf50;\r\n}\r\n\r\n.card-trend.negative {\r\n  color: #f44336;\r\n}\r\n\r\n.card-trend.neutral {\r\n  color: #9e9e9e;\r\n}\r\n\r\n.dashboard-card.loading {\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: loading 1.5s infinite;\r\n}\r\n\r\n@keyframes loading {\r\n  0% { background-position: 200% 0; }\r\n  100% { background-position: -200% 0; }\r\n}\r\n</style>"],"mappings":"AAmBA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,KAAK,EAAE,CAACC,MAAM,EAAEF,MAAM,CAAC;IACvBG,IAAI,EAAEH,MAAM;IACZI,KAAK,EAAEF,MAAM;IACbG,OAAO,EAAEC;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACH,OAAO,EAAE,OAAO,IAAI;MAC7B,IAAI,OAAO,IAAI,CAACJ,KAAI,KAAM,QAAQ,EAAE,OAAO,IAAI,CAACA,KAAK,CAACQ,cAAc,CAAC,CAAC;MACtE,OAAO,IAAI,CAACR,KAAK;IACnB,CAAC;IACDS,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACN,KAAI,GAAI,CAAC,EAAE,OAAO,UAAU;MACrC,IAAI,IAAI,CAACA,KAAI,GAAI,CAAC,EAAE,OAAO,UAAU;MACrC,OAAO,SAAS;IAClB,CAAC;IACDO,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACP,KAAI,GAAI,IAAI,UAAS,GAAI,YAAY;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}